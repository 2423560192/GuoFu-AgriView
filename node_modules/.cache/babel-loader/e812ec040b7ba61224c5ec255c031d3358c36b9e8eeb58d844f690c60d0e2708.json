{"ast":null,"code":"import \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.map.js\";\nexport default {\n  name: 'FertilizerVillage',\n  data() {\n    return {\n      chart: null,\n      villageData: [{\n        name: '平等村',\n        value: 512.87\n      }, {\n        name: '龙泉村',\n        value: 505.86\n      }, {\n        name: '骑龙村',\n        value: 484.21\n      }, {\n        name: '高庙村',\n        value: 457.57\n      }, {\n        name: '同心村',\n        value: 447.48\n      }, {\n        name: '五星村',\n        value: 416.29\n      }, {\n        name: '人和村',\n        value: 387.58\n      }, {\n        name: '梅子村',\n        value: 384.10\n      }, {\n        name: '三塘村',\n        value: 379.71\n      }, {\n        name: '长岭村',\n        value: 376.53\n      }, {\n        name: '古松村',\n        value: 375.13\n      }, {\n        name: '龙台村',\n        value: 367.06\n      }, {\n        name: '双山村',\n        value: 367.04\n      }, {\n        name: '翻身村',\n        value: 359.78\n      }, {\n        name: '狮子村',\n        value: 346.67\n      }, {\n        name: '团结村',\n        value: 332.57\n      }, {\n        name: '垮山村',\n        value: 323.64\n      }, {\n        name: '安平村',\n        value: 321.98\n      }, {\n        name: '建新村',\n        value: 301.68\n      }, {\n        name: '永胜村',\n        value: 291.54\n      }, {\n        name: '银盆村',\n        value: 236.73\n      }]\n    };\n  },\n  mounted() {\n    this.$nextTick(() => {\n      this.initChart();\n    });\n    window.addEventListener('resize', this.handleResize);\n    if (window.ResizeObserver) {\n      this.observer = new ResizeObserver(() => {\n        this.handleResize();\n      });\n      this.observer.observe(this.$el);\n    }\n  },\n  beforeDestroy() {\n    window.removeEventListener('resize', this.handleResize);\n    if (this.observer) {\n      this.observer.disconnect();\n    }\n    if (this.chart) {\n      this.chart.dispose();\n      this.chart = null;\n    }\n  },\n  methods: {\n    initChart() {\n      // 对数据进行排序（从大到小）\n      const sortedData = [...this.villageData].sort((a, b) => b.value - a.value);\n\n      // 将数据转换为适合条形图的格式\n      const villages = sortedData.map(item => item.name);\n      const values = sortedData.map(item => item.value);\n\n      // 设置固定高度为600px，确保可以容纳所有村庄数据\n      this.$refs.chart.style.height = '600px';\n\n      // 获取容器宽度决定是否显示完整村名\n      const containerWidth = this.$el.clientWidth;\n      const showFullName = containerWidth > 350;\n      this.chart = this.$echarts.init(this.$refs.chart);\n      const option = {\n        tooltip: {\n          trigger: 'axis',\n          formatter: '{b}<br/>化肥使用量: {c} 吨',\n          backgroundColor: 'rgba(0, 0, 0, 0.7)',\n          borderColor: 'rgba(255, 255, 255, 0.2)',\n          textStyle: {\n            color: '#fff'\n          }\n        },\n        grid: {\n          top: '3%',\n          right: showFullName ? '8%' : '5%',\n          bottom: '3%',\n          left: showFullName ? '15%' : '20%',\n          containLabel: true\n        },\n        xAxis: {\n          type: 'value',\n          name: '吨',\n          nameTextStyle: {\n            color: 'rgba(255, 255, 255, 0.7)'\n          },\n          axisLine: {\n            lineStyle: {\n              color: 'rgba(255, 255, 255, 0.3)'\n            }\n          },\n          axisLabel: {\n            color: 'rgba(255, 255, 255, 0.7)',\n            fontSize: containerWidth < 400 ? 10 : 11\n          },\n          splitLine: {\n            lineStyle: {\n              color: 'rgba(255, 255, 255, 0.1)'\n            }\n          }\n        },\n        yAxis: {\n          type: 'category',\n          data: villages,\n          inverse: true,\n          axisLine: {\n            lineStyle: {\n              color: 'rgba(255, 255, 255, 0.3)'\n            }\n          },\n          axisLabel: {\n            color: 'rgba(255, 255, 255, 0.7)',\n            margin: 10,\n            fontSize: containerWidth < 400 ? 10 : 11,\n            formatter: function (value) {\n              if (!showFullName && value.length > 3) {\n                return value.substring(0, 2) + '..';\n              }\n              return value;\n            }\n          }\n        },\n        series: [{\n          name: '化肥使用量',\n          type: 'bar',\n          data: values,\n          barWidth: '60%',\n          itemStyle: {\n            color: new this.$echarts.graphic.LinearGradient(0, 0, 1, 0, [{\n              offset: 0,\n              color: 'rgba(249, 199, 79, 0.3)'\n            }, {\n              offset: 1,\n              color: 'rgba(249, 199, 79, 0.8)'\n            }])\n          },\n          label: {\n            show: containerWidth > 300,\n            position: 'right',\n            color: '#fff',\n            fontSize: containerWidth < 400 ? 9 : 10,\n            formatter: '{c} 吨'\n          }\n        }]\n      };\n      this.chart.setOption(option);\n    },\n    handleResize() {\n      if (this.chart) {\n        this.chart.dispose();\n        this.initChart(); // 重新初始化以应用响应式变化\n      }\n    }\n  }\n};","map":{"version":3,"names":["name","data","chart","villageData","value","mounted","$nextTick","initChart","window","addEventListener","handleResize","ResizeObserver","observer","observe","$el","beforeDestroy","removeEventListener","disconnect","dispose","methods","sortedData","sort","a","b","villages","map","item","values","$refs","style","height","containerWidth","clientWidth","showFullName","$echarts","init","option","tooltip","trigger","formatter","backgroundColor","borderColor","textStyle","color","grid","top","right","bottom","left","containLabel","xAxis","type","nameTextStyle","axisLine","lineStyle","axisLabel","fontSize","splitLine","yAxis","inverse","margin","length","substring","series","barWidth","itemStyle","graphic","LinearGradient","offset","label","show","position","setOption"],"sources":["src/components/charts/FertilizerVillage.vue"],"sourcesContent":["<template>\r\n  <div class=\"chart-wrapper\">\r\n    <div class=\"chart-title\">各村2024年农业化肥使用量</div>\r\n    <div class=\"fixed-height-container\">\r\n      <div ref=\"chart\" class=\"chart\"></div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: 'FertilizerVillage',\r\n  data() {\r\n    return {\r\n      chart: null,\r\n      villageData: [\r\n        { name: '平等村', value: 512.87 },\r\n        { name: '龙泉村', value: 505.86 },\r\n        { name: '骑龙村', value: 484.21 },\r\n        { name: '高庙村', value: 457.57 },\r\n        { name: '同心村', value: 447.48 },\r\n        { name: '五星村', value: 416.29 },\r\n        { name: '人和村', value: 387.58 },\r\n        { name: '梅子村', value: 384.10 },\r\n        { name: '三塘村', value: 379.71 },\r\n        { name: '长岭村', value: 376.53 },\r\n        { name: '古松村', value: 375.13 },\r\n        { name: '龙台村', value: 367.06 },\r\n        { name: '双山村', value: 367.04 },\r\n        { name: '翻身村', value: 359.78 },\r\n        { name: '狮子村', value: 346.67 },\r\n        { name: '团结村', value: 332.57 },\r\n        { name: '垮山村', value: 323.64 },\r\n        { name: '安平村', value: 321.98 },\r\n        { name: '建新村', value: 301.68 },\r\n        { name: '永胜村', value: 291.54 },\r\n        { name: '银盆村', value: 236.73 }\r\n      ]\r\n    }\r\n  },\r\n  mounted() {\r\n    this.$nextTick(() => {\r\n      this.initChart()\r\n    })\r\n    window.addEventListener('resize', this.handleResize)\r\n    \r\n    if (window.ResizeObserver) {\r\n      this.observer = new ResizeObserver(() => {\r\n        this.handleResize()\r\n      })\r\n      this.observer.observe(this.$el)\r\n    }\r\n  },\r\n  beforeDestroy() {\r\n    window.removeEventListener('resize', this.handleResize)\r\n    if (this.observer) {\r\n      this.observer.disconnect()\r\n    }\r\n    if (this.chart) {\r\n      this.chart.dispose()\r\n      this.chart = null\r\n    }\r\n  },\r\n  methods: {\r\n    initChart() {\r\n      // 对数据进行排序（从大到小）\r\n      const sortedData = [...this.villageData].sort((a, b) => b.value - a.value)\r\n      \r\n      // 将数据转换为适合条形图的格式\r\n      const villages = sortedData.map(item => item.name)\r\n      const values = sortedData.map(item => item.value)\r\n      \r\n      // 设置固定高度为600px，确保可以容纳所有村庄数据\r\n      this.$refs.chart.style.height = '600px';\r\n      \r\n      // 获取容器宽度决定是否显示完整村名\r\n      const containerWidth = this.$el.clientWidth\r\n      const showFullName = containerWidth > 350\r\n      \r\n      this.chart = this.$echarts.init(this.$refs.chart)\r\n      const option = {\r\n        tooltip: {\r\n          trigger: 'axis',\r\n          formatter: '{b}<br/>化肥使用量: {c} 吨',\r\n          backgroundColor: 'rgba(0, 0, 0, 0.7)',\r\n          borderColor: 'rgba(255, 255, 255, 0.2)',\r\n          textStyle: {\r\n            color: '#fff'\r\n          }\r\n        },\r\n        grid: {\r\n          top: '3%',\r\n          right: showFullName ? '8%' : '5%',\r\n          bottom: '3%',\r\n          left: showFullName ? '15%' : '20%',\r\n          containLabel: true\r\n        },\r\n        xAxis: {\r\n          type: 'value',\r\n          name: '吨',\r\n          nameTextStyle: {\r\n            color: 'rgba(255, 255, 255, 0.7)'\r\n          },\r\n          axisLine: {\r\n            lineStyle: {\r\n              color: 'rgba(255, 255, 255, 0.3)'\r\n            }\r\n          },\r\n          axisLabel: {\r\n            color: 'rgba(255, 255, 255, 0.7)',\r\n            fontSize: containerWidth < 400 ? 10 : 11\r\n          },\r\n          splitLine: {\r\n            lineStyle: {\r\n              color: 'rgba(255, 255, 255, 0.1)'\r\n            }\r\n          }\r\n        },\r\n        yAxis: {\r\n          type: 'category',\r\n          data: villages,\r\n          inverse: true,\r\n          axisLine: {\r\n            lineStyle: {\r\n              color: 'rgba(255, 255, 255, 0.3)'\r\n            }\r\n          },\r\n          axisLabel: {\r\n            color: 'rgba(255, 255, 255, 0.7)',\r\n            margin: 10,\r\n            fontSize: containerWidth < 400 ? 10 : 11,\r\n            formatter: function(value) {\r\n              if (!showFullName && value.length > 3) {\r\n                return value.substring(0, 2) + '..';\r\n              }\r\n              return value;\r\n            }\r\n          }\r\n        },\r\n        series: [\r\n          {\r\n            name: '化肥使用量',\r\n            type: 'bar',\r\n            data: values,\r\n            barWidth: '60%',\r\n            itemStyle: {\r\n              color: new this.$echarts.graphic.LinearGradient(0, 0, 1, 0, [\r\n                { offset: 0, color: 'rgba(249, 199, 79, 0.3)' },\r\n                { offset: 1, color: 'rgba(249, 199, 79, 0.8)' }\r\n              ])\r\n            },\r\n            label: {\r\n              show: containerWidth > 300,\r\n              position: 'right',\r\n              color: '#fff',\r\n              fontSize: containerWidth < 400 ? 9 : 10,\r\n              formatter: '{c} 吨'\r\n            }\r\n          }\r\n        ]\r\n      }\r\n      \r\n      this.chart.setOption(option)\r\n    },\r\n    handleResize() {\r\n      if (this.chart) {\r\n        this.chart.dispose()\r\n        this.initChart() // 重新初始化以应用响应式变化\r\n      }\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.chart-wrapper {\r\n  width: 100%;\r\n  height: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  padding: 5px;\r\n  box-sizing: border-box;\r\n}\r\n\r\n.chart-title {\r\n  font-size: 14px;\r\n  color: #fff;\r\n  text-align: center;\r\n  margin-bottom: 5px;\r\n  flex-shrink: 0;\r\n}\r\n\r\n.fixed-height-container {\r\n  height: 250px;\r\n  overflow-y: auto;\r\n  overflow-x: hidden;\r\n}\r\n\r\n.fixed-height-container::-webkit-scrollbar {\r\n  width: 4px;\r\n  height: 4px;\r\n}\r\n\r\n.fixed-height-container::-webkit-scrollbar-thumb {\r\n  background: rgba(255, 255, 255, 0.3);\r\n  border-radius: 2px;\r\n}\r\n\r\n.fixed-height-container::-webkit-scrollbar-track {\r\n  background: rgba(0, 0, 0, 0.1);\r\n  border-radius: 2px;\r\n}\r\n\r\n.chart {\r\n  width: 100%;\r\n}\r\n\r\n@media screen and (max-width: 480px) {\r\n  .chart-title {\r\n    font-size: 12px;\r\n  }\r\n  \r\n  .fixed-height-container {\r\n    height: 200px;\r\n  }\r\n}\r\n</style> "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}