{"ast":null,"code":"import \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.for-each.js\";\nimport \"core-js/modules/es.iterator.map.js\";\nimport \"core-js/modules/es.set.difference.v2.js\";\nimport \"core-js/modules/es.set.intersection.v2.js\";\nimport \"core-js/modules/es.set.is-disjoint-from.v2.js\";\nimport \"core-js/modules/es.set.is-subset-of.v2.js\";\nimport \"core-js/modules/es.set.is-superset-of.v2.js\";\nimport \"core-js/modules/es.set.symmetric-difference.v2.js\";\nimport \"core-js/modules/es.set.union.v2.js\";\nexport default {\n  name: 'FertilizerSankey',\n  data() {\n    return {\n      chart: null,\n      fertilizerData: [\n      // 2021年数据\n      {\n        source: '2021年',\n        target: '氮肥',\n        value: 1006.98\n      }, {\n        source: '2021年',\n        target: '磷肥',\n        value: 591.99\n      }, {\n        source: '2021年',\n        target: '钾肥',\n        value: 158.00\n      }, {\n        source: '2021年',\n        target: '复合肥',\n        value: 620.84\n      },\n      // 2022年数据\n      {\n        source: '2022年',\n        target: '氮肥',\n        value: 2508.65\n      }, {\n        source: '2022年',\n        target: '磷肥',\n        value: 5608.58\n      }, {\n        source: '2022年',\n        target: '钾肥',\n        value: 301.95\n      }, {\n        source: '2022年',\n        target: '复合肥',\n        value: 1755.43\n      },\n      // 2023年数据\n      {\n        source: '2023年',\n        target: '氮肥',\n        value: 2500.03\n      }, {\n        source: '2023年',\n        target: '磷肥',\n        value: 3670.31\n      }, {\n        source: '2023年',\n        target: '钾肥',\n        value: 285.05\n      }, {\n        source: '2023年',\n        target: '复合肥',\n        value: 1505.02\n      },\n      // 2024年数据\n      {\n        source: '2024年',\n        target: '氮肥',\n        value: 2498.20\n      }, {\n        source: '2024年',\n        target: '磷肥',\n        value: 3676.38\n      }, {\n        source: '2024年',\n        target: '钾肥',\n        value: 285.80\n      }, {\n        source: '2024年',\n        target: '复合肥',\n        value: 1515.63\n      }],\n      colors: {\n        '2021年': '#276678',\n        '2022年': '#1687a7',\n        '2023年': '#00a8cc',\n        '2024年': '#4cd5ce',\n        '氮肥': '#4cd5ce',\n        '磷肥': '#43aa8b',\n        '钾肥': '#f9c74f',\n        '复合肥': '#f94144'\n      }\n    };\n  },\n  mounted() {\n    this.initChart();\n    window.addEventListener('resize', this.handleResize);\n  },\n  beforeDestroy() {\n    if (this.chart) {\n      this.chart.dispose();\n      this.chart = null;\n    }\n    window.removeEventListener('resize', this.handleResize);\n  },\n  methods: {\n    initChart() {\n      this.chart = this.$echarts.init(this.$refs.chart);\n      this.updateChart();\n    },\n    handleResize() {\n      if (this.chart) {\n        this.chart.resize();\n      }\n    },\n    updateChart() {\n      // 从links数据中提取所有唯一节点名称\n      const nodeNames = new Set();\n      this.fertilizerData.forEach(link => {\n        nodeNames.add(link.source);\n        nodeNames.add(link.target);\n      });\n\n      // 转换为nodes数组\n      const nodes = Array.from(nodeNames).map(name => ({\n        name: name,\n        itemStyle: {\n          color: this.colors[name]\n        }\n      }));\n      const option = {\n        title: {\n          show: false\n        },\n        tooltip: {\n          trigger: 'item',\n          triggerOn: 'mousemove',\n          formatter: params => {\n            if (params.dataType === 'edge') {\n              return `${params.data.source} → ${params.data.target}: ${params.value.toFixed(2)} 吨`;\n            }\n            return params.name;\n          }\n        },\n        series: [{\n          type: 'sankey',\n          left: '10%',\n          right: '10%',\n          data: nodes,\n          links: this.fertilizerData,\n          nodeAlign: 'justify',\n          orient: 'horizontal',\n          draggable: false,\n          label: {\n            position: 'right',\n            color: '#fff',\n            fontSize: 12\n          },\n          lineStyle: {\n            color: 'gradient',\n            curveness: 0.5,\n            opacity: 0.6\n          },\n          itemStyle: {\n            borderWidth: 1,\n            borderColor: '#333'\n          },\n          emphasis: {\n            focus: 'adjacency',\n            lineStyle: {\n              opacity: 0.9\n            }\n          },\n          layoutIterations: 32\n        }]\n      };\n      this.chart.setOption(option);\n    }\n  }\n};","map":{"version":3,"names":["name","data","chart","fertilizerData","source","target","value","colors","mounted","initChart","window","addEventListener","handleResize","beforeDestroy","dispose","removeEventListener","methods","$echarts","init","$refs","updateChart","resize","nodeNames","Set","forEach","link","add","nodes","Array","from","map","itemStyle","color","option","title","show","tooltip","trigger","triggerOn","formatter","params","dataType","toFixed","series","type","left","right","links","nodeAlign","orient","draggable","label","position","fontSize","lineStyle","curveness","opacity","borderWidth","borderColor","emphasis","focus","layoutIterations","setOption"],"sources":["src/components/charts/FertilizerSankey.vue"],"sourcesContent":["<template>\r\n  <div class=\"chart-wrapper\">\r\n    <div class=\"chart-title\">各年各类化肥使用量流向图</div>\r\n    <div ref=\"chart\" class=\"chart-container\"></div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: 'FertilizerSankey',\r\n  data() {\r\n    return {\r\n      chart: null,\r\n      fertilizerData: [\r\n        // 2021年数据\r\n        { source: '2021年', target: '氮肥', value: 1006.98 },\r\n        { source: '2021年', target: '磷肥', value: 591.99 },\r\n        { source: '2021年', target: '钾肥', value: 158.00 },\r\n        { source: '2021年', target: '复合肥', value: 620.84 },\r\n        \r\n        // 2022年数据\r\n        { source: '2022年', target: '氮肥', value: 2508.65 },\r\n        { source: '2022年', target: '磷肥', value: 5608.58 },\r\n        { source: '2022年', target: '钾肥', value: 301.95 },\r\n        { source: '2022年', target: '复合肥', value: 1755.43 },\r\n        \r\n        // 2023年数据\r\n        { source: '2023年', target: '氮肥', value: 2500.03 },\r\n        { source: '2023年', target: '磷肥', value: 3670.31 },\r\n        { source: '2023年', target: '钾肥', value: 285.05 },\r\n        { source: '2023年', target: '复合肥', value: 1505.02 },\r\n        \r\n        // 2024年数据\r\n        { source: '2024年', target: '氮肥', value: 2498.20 },\r\n        { source: '2024年', target: '磷肥', value: 3676.38 },\r\n        { source: '2024年', target: '钾肥', value: 285.80 },\r\n        { source: '2024年', target: '复合肥', value: 1515.63 }\r\n      ],\r\n      colors: {\r\n        '2021年': '#276678',\r\n        '2022年': '#1687a7',\r\n        '2023年': '#00a8cc',\r\n        '2024年': '#4cd5ce',\r\n        '氮肥': '#4cd5ce',\r\n        '磷肥': '#43aa8b',\r\n        '钾肥': '#f9c74f',\r\n        '复合肥': '#f94144'\r\n      }\r\n    };\r\n  },\r\n  mounted() {\r\n    this.initChart();\r\n    window.addEventListener('resize', this.handleResize);\r\n  },\r\n  beforeDestroy() {\r\n    if (this.chart) {\r\n      this.chart.dispose();\r\n      this.chart = null;\r\n    }\r\n    window.removeEventListener('resize', this.handleResize);\r\n  },\r\n  methods: {\r\n    initChart() {\r\n      this.chart = this.$echarts.init(this.$refs.chart);\r\n      this.updateChart();\r\n    },\r\n    handleResize() {\r\n      if (this.chart) {\r\n        this.chart.resize();\r\n      }\r\n    },\r\n    updateChart() {\r\n      // 从links数据中提取所有唯一节点名称\r\n      const nodeNames = new Set();\r\n      this.fertilizerData.forEach(link => {\r\n        nodeNames.add(link.source);\r\n        nodeNames.add(link.target);\r\n      });\r\n      \r\n      // 转换为nodes数组\r\n      const nodes = Array.from(nodeNames).map(name => ({\r\n        name: name,\r\n        itemStyle: {\r\n          color: this.colors[name]\r\n        }\r\n      }));\r\n      \r\n      const option = {\r\n        title: {\r\n          show: false\r\n        },\r\n        tooltip: {\r\n          trigger: 'item',\r\n          triggerOn: 'mousemove',\r\n          formatter: params => {\r\n            if (params.dataType === 'edge') {\r\n              return `${params.data.source} → ${params.data.target}: ${params.value.toFixed(2)} 吨`;\r\n            }\r\n            return params.name;\r\n          }\r\n        },\r\n        series: [{\r\n          type: 'sankey',\r\n          left: '10%',\r\n          right: '10%',\r\n          data: nodes,\r\n          links: this.fertilizerData,\r\n          nodeAlign: 'justify',\r\n          orient: 'horizontal',\r\n          draggable: false,\r\n          label: {\r\n            position: 'right',\r\n            color: '#fff',\r\n            fontSize: 12\r\n          },\r\n          lineStyle: {\r\n            color: 'gradient',\r\n            curveness: 0.5,\r\n            opacity: 0.6\r\n          },\r\n          itemStyle: {\r\n            borderWidth: 1,\r\n            borderColor: '#333'\r\n          },\r\n          emphasis: {\r\n            focus: 'adjacency',\r\n            lineStyle: {\r\n              opacity: 0.9\r\n            }\r\n          },\r\n          layoutIterations: 32\r\n        }]\r\n      };\r\n      \r\n      this.chart.setOption(option);\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.chart-wrapper {\r\n  width: 100%;\r\n  height: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  padding:.5px;\r\n  box-sizing: border-box;\r\n}\r\n\r\n.chart-title {\r\n  font-size: 14px;\r\n  color: #fff;\r\n  text-align: center;\r\n  margin-bottom: 5px;\r\n  flex-shrink: 0;\r\n}\r\n\r\n.chart-container {\r\n  flex: 1;\r\n  width: 100%;\r\n}\r\n\r\n@media screen and (max-width: 480px) {\r\n  .chart-title {\r\n    font-size: 12px;\r\n  }\r\n}\r\n</style> "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}