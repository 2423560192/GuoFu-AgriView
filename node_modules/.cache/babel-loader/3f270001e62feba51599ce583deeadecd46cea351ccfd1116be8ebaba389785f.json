{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.find.js\";\nimport \"core-js/modules/es.iterator.for-each.js\";\nimport \"core-js/modules/es.iterator.map.js\";\nexport default {\n  name: 'FertilizerSankey',\n  data() {\n    return {\n      chart: null,\n      fertilizerData: [\n      // 2021年数据 - 已更新为正确数据\n      {\n        source: '2021年',\n        target: '氮肥',\n        value: 1006.98\n      }, {\n        source: '2021年',\n        target: '磷肥',\n        value: 591.99\n      }, {\n        source: '2021年',\n        target: '钾肥',\n        value: 158.00\n      }, {\n        source: '2021年',\n        target: '复合肥',\n        value: 620.84\n      },\n      // 2022年数据 - 已更新为正确数据\n      {\n        source: '2022年',\n        target: '氮肥',\n        value: 2508.65\n      }, {\n        source: '2022年',\n        target: '磷肥',\n        value: 5608.58\n      }, {\n        source: '2022年',\n        target: '钾肥',\n        value: 301.95\n      }, {\n        source: '2022年',\n        target: '复合肥',\n        value: 1755.43\n      },\n      // 2023年数据 - 已更新为正确数据\n      {\n        source: '2023年',\n        target: '氮肥',\n        value: 2500.03\n      }, {\n        source: '2023年',\n        target: '磷肥',\n        value: 3670.31\n      }, {\n        source: '2023年',\n        target: '钾肥',\n        value: 285.05\n      }, {\n        source: '2023年',\n        target: '复合肥',\n        value: 1505.02\n      },\n      // 2024年数据 - 已更新为正确数据\n      {\n        source: '2024年',\n        target: '氮肥',\n        value: 2498.20\n      }, {\n        source: '2024年',\n        target: '磷肥',\n        value: 3676.38\n      }, {\n        source: '2024年',\n        target: '钾肥',\n        value: 285.80\n      }, {\n        source: '2024年',\n        target: '复合肥',\n        value: 1515.63\n      }],\n      colors: {\n        '2021年': '#08979c',\n        '2022年': '#13c2c2',\n        '2023年': '#36cfc9',\n        '2024年': '#5cdbd3',\n        '氮肥': '#ff4d4f',\n        '磷肥': '#ffd666',\n        '钾肥': '#95de64',\n        '复合肥': '#69c0ff'\n      },\n      yearOrder: ['2021年', '2022年', '2023年', '2024年'],\n      fertilizerOrder: ['氮肥', '磷肥', '钾肥', '复合肥']\n    };\n  },\n  mounted() {\n    this.initChart();\n    window.addEventListener('resize', this.handleResize);\n  },\n  beforeDestroy() {\n    window.removeEventListener('resize', this.handleResize);\n    if (this.chart) {\n      this.chart.dispose();\n    }\n  },\n  methods: {\n    initChart() {\n      if (this.chart) {\n        this.chart.dispose();\n      }\n      this.chart = this.$echarts.init(this.$refs.chart);\n\n      // 处理钾肥相关的连接，使其显示更明显\n      const adjustedLinks = this.fertilizerData.map(link => {\n        // 钾肥连接加粗3倍，但保持原始数值\n        if (link.target === '钾肥') {\n          return {\n            source: link.source,\n            target: link.target,\n            value: link.value * 3 // 放大显示，但在提示框中仍显示原值\n          };\n        }\n        return link;\n      });\n\n      // 直接设置节点位置，确保年份从上到下排列\n      const nodes = [];\n\n      // 添加年份节点，使其从上到下垂直排列\n      this.yearOrder.forEach((year, index) => {\n        nodes.push({\n          name: year,\n          itemStyle: {\n            color: this.colors[year]\n          },\n          x: 0.05,\n          // 左侧5%位置\n          y: 0.1 + index * 0.2,\n          // 垂直分布\n          fixed: true,\n          // 固定位置\n          value: year // 用于tooltip显示\n        });\n      });\n\n      // 添加肥料类型节点\n      this.fertilizerOrder.forEach(fertilizer => {\n        nodes.push({\n          name: fertilizer,\n          itemStyle: {\n            color: this.colors[fertilizer]\n          }\n        });\n      });\n      const option = {\n        tooltip: {\n          trigger: 'item',\n          triggerOn: 'mousemove',\n          formatter: params => {\n            if (params.dataType === 'edge') {\n              // 查找原始链接值\n              const original = this.fertilizerData.find(link => link.source === params.data.source && link.target === params.data.target);\n              return `${params.data.source} → ${params.data.target}: ${original ? original.value.toFixed(2) : params.data.value.toFixed(2)} 吨`;\n            }\n            return params.name;\n          }\n        },\n        grid: {\n          containLabel: true,\n          width: '80%' // 设置图表区域宽度为容器的80%\n        },\n        series: [{\n          type: 'sankey',\n          left: '8%',\n          // 调整左边距\n          right: '12%',\n          // 调整右边距\n          top: '5%',\n          bottom: '5%',\n          nodeWidth: 20,\n          nodeGap: 12,\n          layoutIterations: 0,\n          // 禁用自动布局\n          orient: 'horizontal',\n          emphasis: {\n            focus: 'adjacency'\n          },\n          data: nodes,\n          links: adjustedLinks,\n          label: {\n            position: 'right',\n            fontSize: 12,\n            color: '#fff'\n          },\n          lineStyle: {\n            color: 'source',\n            opacity: 0.4,\n            curveness: 0.5\n          }\n        }]\n      };\n      this.chart.setOption(option);\n    },\n    handleResize() {\n      if (this.chart) {\n        this.chart.resize();\n      }\n    }\n  }\n};","map":{"version":3,"names":["name","data","chart","fertilizerData","source","target","value","colors","yearOrder","fertilizerOrder","mounted","initChart","window","addEventListener","handleResize","beforeDestroy","removeEventListener","dispose","methods","$echarts","init","$refs","adjustedLinks","map","link","nodes","forEach","year","index","push","itemStyle","color","x","y","fixed","fertilizer","option","tooltip","trigger","triggerOn","formatter","params","dataType","original","find","toFixed","grid","containLabel","width","series","type","left","right","top","bottom","nodeWidth","nodeGap","layoutIterations","orient","emphasis","focus","links","label","position","fontSize","lineStyle","opacity","curveness","setOption","resize"],"sources":["src/components/charts/FertilizerSankey.vue"],"sourcesContent":["<template>\r\n  <div class=\"chart-wrapper\">\r\n    <div class=\"chart-title\">各年各类化肥使用量流向图</div>\r\n    <div ref=\"chart\" class=\"chart-container\"></div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: 'FertilizerSankey',\r\n  data() {\r\n    return {\r\n      chart: null,\r\n      fertilizerData: [\r\n        // 2021年数据 - 已更新为正确数据\r\n        { source: '2021年', target: '氮肥', value: 1006.98 },\r\n        { source: '2021年', target: '磷肥', value: 591.99 },\r\n        { source: '2021年', target: '钾肥', value: 158.00 },\r\n        { source: '2021年', target: '复合肥', value: 620.84 },\r\n        \r\n        // 2022年数据 - 已更新为正确数据\r\n        { source: '2022年', target: '氮肥', value: 2508.65 },\r\n        { source: '2022年', target: '磷肥', value: 5608.58 },\r\n        { source: '2022年', target: '钾肥', value: 301.95 },\r\n        { source: '2022年', target: '复合肥', value: 1755.43 },\r\n        \r\n        // 2023年数据 - 已更新为正确数据\r\n        { source: '2023年', target: '氮肥', value: 2500.03 },\r\n        { source: '2023年', target: '磷肥', value: 3670.31 },\r\n        { source: '2023年', target: '钾肥', value: 285.05 },\r\n        { source: '2023年', target: '复合肥', value: 1505.02 },\r\n        \r\n        // 2024年数据 - 已更新为正确数据\r\n        { source: '2024年', target: '氮肥', value: 2498.20 },\r\n        { source: '2024年', target: '磷肥', value: 3676.38 },\r\n        { source: '2024年', target: '钾肥', value: 285.80 },\r\n        { source: '2024年', target: '复合肥', value: 1515.63 }\r\n      ],\r\n      colors: {\r\n        '2021年': '#08979c',\r\n        '2022年': '#13c2c2',\r\n        '2023年': '#36cfc9',\r\n        '2024年': '#5cdbd3',\r\n        '氮肥': '#ff4d4f',\r\n        '磷肥': '#ffd666',\r\n        '钾肥': '#95de64',\r\n        '复合肥': '#69c0ff'\r\n      },\r\n      yearOrder: ['2021年', '2022年', '2023年', '2024年'],\r\n      fertilizerOrder: ['氮肥', '磷肥', '钾肥', '复合肥']\r\n    };\r\n  },\r\n  mounted() {\r\n    this.initChart();\r\n    window.addEventListener('resize', this.handleResize);\r\n  },\r\n  beforeDestroy() {\r\n    window.removeEventListener('resize', this.handleResize);\r\n    if (this.chart) {\r\n      this.chart.dispose();\r\n    }\r\n  },\r\n  methods: {\r\n    initChart() {\r\n      if (this.chart) {\r\n        this.chart.dispose();\r\n      }\r\n      \r\n      this.chart = this.$echarts.init(this.$refs.chart);\r\n      \r\n      // 处理钾肥相关的连接，使其显示更明显\r\n      const adjustedLinks = this.fertilizerData.map(link => {\r\n        // 钾肥连接加粗3倍，但保持原始数值\r\n        if (link.target === '钾肥') {\r\n          return {\r\n            source: link.source,\r\n            target: link.target,\r\n            value: link.value * 3  // 放大显示，但在提示框中仍显示原值\r\n          };\r\n        }\r\n        return link;\r\n      });\r\n      \r\n      // 直接设置节点位置，确保年份从上到下排列\r\n      const nodes = [];\r\n      \r\n      // 添加年份节点，使其从上到下垂直排列\r\n      this.yearOrder.forEach((year, index) => {\r\n        nodes.push({\r\n          name: year,\r\n          itemStyle: { color: this.colors[year] },\r\n          x: 0.05,  // 左侧5%位置\r\n          y: 0.1 + index * 0.2,  // 垂直分布\r\n          fixed: true,  // 固定位置\r\n          value: year  // 用于tooltip显示\r\n        });\r\n      });\r\n      \r\n      // 添加肥料类型节点\r\n      this.fertilizerOrder.forEach((fertilizer) => {\r\n        nodes.push({\r\n          name: fertilizer,\r\n          itemStyle: { color: this.colors[fertilizer] }\r\n        });\r\n      });\r\n      \r\n      const option = {\r\n        tooltip: {\r\n          trigger: 'item',\r\n          triggerOn: 'mousemove',\r\n          formatter: params => {\r\n            if (params.dataType === 'edge') {\r\n              // 查找原始链接值\r\n              const original = this.fertilizerData.find(\r\n                link => link.source === params.data.source && link.target === params.data.target\r\n              );\r\n              return `${params.data.source} → ${params.data.target}: ${original ? original.value.toFixed(2) : params.data.value.toFixed(2)} 吨`;\r\n            }\r\n            return params.name;\r\n          }\r\n        },\r\n        grid: {\r\n          containLabel: true,\r\n          width: '80%' // 设置图表区域宽度为容器的80%\r\n        },\r\n        series: [{\r\n          type: 'sankey',\r\n          left: '8%',  // 调整左边距\r\n          right: '12%', // 调整右边距\r\n          top: '5%',\r\n          bottom: '5%',\r\n          nodeWidth: 20,\r\n          nodeGap: 12,\r\n          layoutIterations: 0,  // 禁用自动布局\r\n          orient: 'horizontal',\r\n          emphasis: {\r\n            focus: 'adjacency'\r\n          },\r\n          data: nodes,\r\n          links: adjustedLinks,\r\n          label: {\r\n            position: 'right',\r\n            fontSize: 12,\r\n            color: '#fff'\r\n          },\r\n          lineStyle: {\r\n            color: 'source',\r\n            opacity: 0.4,\r\n            curveness: 0.5\r\n          }\r\n        }]\r\n      };\r\n      \r\n      this.chart.setOption(option);\r\n    },\r\n    handleResize() {\r\n      if (this.chart) {\r\n        this.chart.resize();\r\n      }\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.chart-wrapper {\r\n  height: 100%;\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  overflow: hidden;\r\n}\r\n\r\n.chart-title {\r\n  font-size: 14px;\r\n  height: 30px;\r\n  line-height: 30px;\r\n  background: rgba(0, 0, 0, 0.1);\r\n  color: #fff;\r\n  text-align: center;\r\n  margin-bottom: 5px;\r\n  flex-shrink: 0;\r\n}\r\n\r\n.chart-container {\r\n  flex: 1;\r\n  width: 90%; /* 容器宽度设置为90% */\r\n  margin: 0 auto; /* 居中显示 */\r\n  min-height: 220px; /* 确保图表有足够的高度 */\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n}\r\n\r\n@media screen and (max-width: 1200px) {\r\n  .chart-container {\r\n    min-height: 200px;\r\n    width: 92%; /* 小屏幕上略微增加宽度 */\r\n  }\r\n  \r\n  .chart-title {\r\n    font-size: 13px;\r\n  }\r\n}\r\n\r\n@media screen and (max-width: 992px) {\r\n  .chart-container {\r\n    min-height: 180px;\r\n  }\r\n}\r\n\r\n@media screen and (max-width: 768px) {\r\n  .chart-container {\r\n    min-height: 160px;\r\n    width: 95%; /* 在移动设备上几乎占满 */\r\n  }\r\n  \r\n  .chart-title {\r\n    font-size: 12px;\r\n    height: 25px;\r\n    line-height: 25px;\r\n  }\r\n}\r\n\r\n@media screen and (max-width: 480px) {\r\n  .chart-title {\r\n    font-size: 11px;\r\n  }\r\n  \r\n  .chart-container {\r\n    min-height: 140px;\r\n  }\r\n}\r\n</style> "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}