{"ast":null,"code":"import \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.flat-map.js\";\nexport default {\n  name: 'OtherConsumptionTable',\n  data() {\n    return {\n      years: ['2021年', '2022年', '2023年', '2024年'],\n      tableData: [{\n        name: '农用塑料薄膜使用量',\n        unit: '千克',\n        values: [37599, 37451, 37306.56, 37306.56]\n      }, {\n        name: '地膜覆盖面积',\n        unit: '亩',\n        values: [9283, 9264, 9245.48, 9245.48]\n      }, {\n        name: '农用柴油使用量',\n        unit: '千克',\n        values: [75170, 74680, 75171.18, 75396.60]\n      }, {\n        name: '农药使用量',\n        unit: '千克',\n        values: [8460, 8407, 8512.21, 8518.5]\n      }]\n    };\n  },\n  methods: {\n    formatNumber(value) {\n      return value.toLocaleString('zh-CN', {\n        maximumFractionDigits: 2\n      });\n    },\n    getBarWidth(value) {\n      // 根据当前值计算条形宽度\n      const maxValue = Math.max(...this.tableData.flatMap(item => item.values));\n      return `${value / maxValue * 80}%`;\n    },\n    getBarColor(index) {\n      // 为不同行分配不同颜色\n      const colors = ['#4cd5ce', '#43aa8b', '#f9c74f', '#f94144'];\n      return colors[index % colors.length];\n    }\n  }\n};","map":{"version":3,"names":["name","data","years","tableData","unit","values","methods","formatNumber","value","toLocaleString","maximumFractionDigits","getBarWidth","maxValue","Math","max","flatMap","item","getBarColor","index","colors","length"],"sources":["src/components/tables/OtherConsumptionTable.vue"],"sourcesContent":["<template>\r\n  <div class=\"table-wrapper\">\r\n    <div class=\"table-title\">农业生产消耗数据（2021-2024年）</div>\r\n    <div class=\"table-container\">\r\n      <table class=\"consumption-table\">\r\n        <thead>\r\n          <tr>\r\n            <th class=\"item-col\">项目</th>\r\n            <th class=\"unit-col\">单位</th>\r\n            <th v-for=\"year in years\" :key=\"year\">{{ year }}</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr v-for=\"(item, index) in tableData\" :key=\"index\">\r\n            <td class=\"item-name\">{{ item.name }}</td>\r\n            <td class=\"unit\">{{ item.unit }}</td>\r\n            <td v-for=\"(value, yearIndex) in item.values\" :key=\"yearIndex\" class=\"value-cell\">\r\n              <div class=\"value-content\">\r\n                <div \r\n                  class=\"value-bar\" \r\n                  :style=\"{ \r\n                    width: getBarWidth(value), \r\n                    backgroundColor: getBarColor(index)\r\n                  }\"\r\n                ></div>\r\n                <span class=\"value-text\">{{ formatNumber(value) }}</span>\r\n              </div>\r\n            </td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: 'OtherConsumptionTable',\r\n  data() {\r\n    return {\r\n      years: ['2021年', '2022年', '2023年', '2024年'],\r\n      tableData: [\r\n        {\r\n          name: '农用塑料薄膜使用量',\r\n          unit: '千克',\r\n          values: [37599, 37451, 37306.56, 37306.56]\r\n        },\r\n        {\r\n          name: '地膜覆盖面积',\r\n          unit: '亩',\r\n          values: [9283, 9264, 9245.48, 9245.48]\r\n        },\r\n        {\r\n          name: '农用柴油使用量',\r\n          unit: '千克',\r\n          values: [75170, 74680, 75171.18, 75396.60]\r\n        },\r\n        {\r\n          name: '农药使用量',\r\n          unit: '千克',\r\n          values: [8460, 8407, 8512.21, 8518.5]\r\n        }\r\n      ]\r\n    }\r\n  },\r\n  methods: {\r\n    formatNumber(value) {\r\n      return value.toLocaleString('zh-CN', { maximumFractionDigits: 2 });\r\n    },\r\n    getBarWidth(value) {\r\n      // 根据当前值计算条形宽度\r\n      const maxValue = Math.max(...this.tableData.flatMap(item => item.values));\r\n      return `${(value / maxValue) * 80}%`;\r\n    },\r\n    getBarColor(index) {\r\n      // 为不同行分配不同颜色\r\n      const colors = ['#4cd5ce', '#43aa8b', '#f9c74f', '#f94144'];\r\n      return colors[index % colors.length];\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.table-wrapper {\r\n  width: 100%;\r\n  height: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  padding: 5px;\r\n  box-sizing: border-box;\r\n}\r\n\r\n.table-title {\r\n  font-size: 14px;\r\n  color: #fff;\r\n  text-align: center;\r\n  margin-bottom: 10px;\r\n}\r\n\r\n.table-container {\r\n  flex: 1;\r\n  overflow: auto;\r\n  min-height: 150px;\r\n}\r\n\r\n.consumption-table {\r\n  width: 100%;\r\n  border-collapse: collapse;\r\n  font-size: 13px;\r\n  color: #fff;\r\n}\r\n\r\n.consumption-table th {\r\n  background-color: rgba(0, 0, 0, 0.3);\r\n  padding: 8px 10px;\r\n  text-align: left;\r\n  font-weight: normal;\r\n  color: rgba(255, 255, 255, 0.8);\r\n  position: sticky;\r\n  top: 0;\r\n  z-index: 10;\r\n}\r\n\r\n.consumption-table td {\r\n  padding: 8px 10px;\r\n  border-bottom: 1px solid rgba(255, 255, 255, 0.05);\r\n}\r\n\r\n.item-col {\r\n  width: 160px;\r\n}\r\n\r\n.unit-col {\r\n  width: 60px;\r\n}\r\n\r\n.item-name {\r\n  color: rgba(255, 255, 255, 0.9);\r\n}\r\n\r\n.unit {\r\n  color: rgba(255, 255, 255, 0.6);\r\n  font-size: 13px;\r\n}\r\n\r\n.value-cell {\r\n  position: relative;\r\n}\r\n\r\n.value-content {\r\n  position: relative;\r\n  height: 24px;\r\n  display: flex;\r\n  align-items: center;\r\n}\r\n\r\n.value-bar {\r\n  position: absolute;\r\n  left: 0;\r\n  top: 0;\r\n  height: 100%;\r\n  border-radius: 2px;\r\n  opacity: 0.3;\r\n  z-index: 0;\r\n  transition: width 0.5s ease;\r\n}\r\n\r\n.value-text {\r\n  position: relative;\r\n  z-index: 1;\r\n  padding-left: 4px;\r\n}\r\n\r\n@media screen and (max-width: 768px) {\r\n  .consumption-table {\r\n    font-size: 12px;\r\n  }\r\n  \r\n  .consumption-table th,\r\n  .consumption-table td {\r\n    padding: 6px 8px;\r\n  }\r\n  \r\n  .value-content {\r\n    height: 20px;\r\n  }\r\n  \r\n  .item-col {\r\n    width: 120px;\r\n  }\r\n  \r\n  .unit-col {\r\n    width: 50px;\r\n  }\r\n}\r\n\r\n@media screen and (max-width: 480px) {\r\n  .consumption-table {\r\n    font-size: 11px;\r\n  }\r\n  \r\n  .consumption-table th,\r\n  .consumption-table td {\r\n    padding: 5px 6px;\r\n  }\r\n  \r\n  .item-col {\r\n    width: 100px;\r\n  }\r\n  \r\n  .unit-col {\r\n    width: 40px;\r\n  }\r\n  \r\n  .table-title {\r\n    font-size: 12px;\r\n    margin-bottom: 5px;\r\n  }\r\n}\r\n</style> "],"mappings":";;AAoCA;EACAA,IAAA;EACAC,KAAA;IACA;MACAC,KAAA;MACAC,SAAA,GACA;QACAH,IAAA;QACAI,IAAA;QACAC,MAAA;MACA,GACA;QACAL,IAAA;QACAI,IAAA;QACAC,MAAA;MACA,GACA;QACAL,IAAA;QACAI,IAAA;QACAC,MAAA;MACA,GACA;QACAL,IAAA;QACAI,IAAA;QACAC,MAAA;MACA;IAEA;EACA;EACAC,OAAA;IACAC,aAAAC,KAAA;MACA,OAAAA,KAAA,CAAAC,cAAA;QAAAC,qBAAA;MAAA;IACA;IACAC,YAAAH,KAAA;MACA;MACA,MAAAI,QAAA,GAAAC,IAAA,CAAAC,GAAA,SAAAX,SAAA,CAAAY,OAAA,CAAAC,IAAA,IAAAA,IAAA,CAAAX,MAAA;MACA,UAAAG,KAAA,GAAAI,QAAA;IACA;IACAK,YAAAC,KAAA;MACA;MACA,MAAAC,MAAA;MACA,OAAAA,MAAA,CAAAD,KAAA,GAAAC,MAAA,CAAAC,MAAA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}