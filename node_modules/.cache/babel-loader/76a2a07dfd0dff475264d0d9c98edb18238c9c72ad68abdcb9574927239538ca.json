{"ast":null,"code":"export default {\n  name: 'OtherConsumptionTable',\n  data() {\n    return {\n      years: ['2021年', '2022年', '2023年', '2024年'],\n      tableData: [{\n        name: '农用塑料薄膜使用量',\n        unit: '千克',\n        values: [37599, 37451, 37306.56, 37306.56]\n      }, {\n        name: '地膜覆盖面积',\n        unit: '亩',\n        values: [9283, 9264, 9245.48, 9245.48]\n      }, {\n        name: '农用柴油使用量',\n        unit: '千克',\n        values: [74873, 75137, 75396.60, 75396.60]\n      }, {\n        name: '农药使用量',\n        unit: '千克',\n        values: [22854, 22831, 22808.56, 0]\n      }],\n      colors: ['#43aa8b', '#90be6d', '#f9c74f', '#f3722c']\n    };\n  },\n  methods: {\n    formatNumber(num) {\n      return num.toLocaleString('zh-CN', {\n        minimumFractionDigits: num % 1 === 0 ? 0 : 2,\n        maximumFractionDigits: 2\n      });\n    },\n    getMaxInRow(values) {\n      return Math.max(...values);\n    },\n    getBarWidth(value, maxValue) {\n      const percentage = value / maxValue * 100;\n      return `${Math.max(percentage, 3)}%`;\n    },\n    getBarColor(index) {\n      return this.colors[index % this.colors.length];\n    }\n  }\n};","map":{"version":3,"names":["name","data","years","tableData","unit","values","colors","methods","formatNumber","num","toLocaleString","minimumFractionDigits","maximumFractionDigits","getMaxInRow","Math","max","getBarWidth","value","maxValue","percentage","getBarColor","index","length"],"sources":["src/components/tables/OtherConsumptionTable.vue"],"sourcesContent":["<template>\r\n  <div class=\"table-wrapper\">\r\n    <table class=\"consumption-table\">\r\n      <thead>\r\n        <tr>\r\n          <th class=\"item-col\">项目</th>\r\n          <th class=\"unit-col\">单位</th>\r\n          <th v-for=\"year in years\" :key=\"year\">{{ year }}</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr v-for=\"(item, index) in tableData\" :key=\"index\">\r\n          <td class=\"item-name\">{{ item.name }}</td>\r\n          <td class=\"unit\">{{ item.unit }}</td>\r\n          <td v-for=\"(value, yearIndex) in item.values\" :key=\"yearIndex\" class=\"value-cell\">\r\n            <div class=\"value-content\">\r\n              <div \r\n                class=\"value-bar\" \r\n                :style=\"{ \r\n                  width: getBarWidth(value, getMaxInRow(item.values)), \r\n                  backgroundColor: getBarColor(index)\r\n                }\"\r\n              ></div>\r\n              <span class=\"value-text\">{{ formatNumber(value) }}</span>\r\n            </div>\r\n          </td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: 'OtherConsumptionTable',\r\n  data() {\r\n    return {\r\n      years: ['2021年', '2022年', '2023年', '2024年'],\r\n      tableData: [\r\n        {\r\n          name: '农用塑料薄膜使用量',\r\n          unit: '千克',\r\n          values: [37599, 37451, 37306.56, 37306.56]\r\n        },\r\n        {\r\n          name: '地膜覆盖面积',\r\n          unit: '亩',\r\n          values: [9283, 9264, 9245.48, 9245.48]\r\n        },\r\n        {\r\n          name: '农用柴油使用量',\r\n          unit: '千克',\r\n          values: [74873, 75137, 75396.60, 75396.60]\r\n        },\r\n        {\r\n          name: '农药使用量',\r\n          unit: '千克',\r\n          values: [22854, 22831, 22808.56, 0]\r\n        }\r\n      ],\r\n      colors: ['#43aa8b', '#90be6d', '#f9c74f', '#f3722c']\r\n    };\r\n  },\r\n  methods: {\r\n    formatNumber(num) {\r\n      return num.toLocaleString('zh-CN', {\r\n        minimumFractionDigits: num % 1 === 0 ? 0 : 2,\r\n        maximumFractionDigits: 2\r\n      });\r\n    },\r\n    getMaxInRow(values) {\r\n      return Math.max(...values);\r\n    },\r\n    getBarWidth(value, maxValue) {\r\n      const percentage = (value / maxValue) * 100;\r\n      return `${Math.max(percentage, 3)}%`;\r\n    },\r\n    getBarColor(index) {\r\n      return this.colors[index % this.colors.length];\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.table-wrapper {\r\n  width: 100%;\r\n  height: 100%;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  padding: 10px;\r\n  box-sizing: border-box;\r\n  overflow: auto;\r\n}\r\n\r\n.consumption-table {\r\n  width: 100%;\r\n  border-collapse: collapse;\r\n  color: #fff;\r\n  font-size: 14px;\r\n}\r\n\r\n.consumption-table th {\r\n  padding: 8px 12px;\r\n  text-align: left;\r\n  background-color: rgba(0, 0, 0, 0.3);\r\n  font-weight: bold;\r\n  border-bottom: 1px solid rgba(255, 255, 255, 0.1);\r\n}\r\n\r\n.consumption-table td {\r\n  padding: 10px 12px;\r\n  border-bottom: 1px solid rgba(255, 255, 255, 0.05);\r\n}\r\n\r\n.consumption-table tbody tr:hover {\r\n  background-color: rgba(255, 255, 255, 0.05);\r\n}\r\n\r\n.item-col {\r\n  width: 25%;\r\n}\r\n\r\n.unit-col {\r\n  width: 10%;\r\n}\r\n\r\n.item-name {\r\n  font-weight: 500;\r\n  color: rgba(255, 255, 255, 0.9);\r\n}\r\n\r\n.unit {\r\n  color: rgba(255, 255, 255, 0.6);\r\n  font-size: 13px;\r\n}\r\n\r\n.value-cell {\r\n  position: relative;\r\n}\r\n\r\n.value-content {\r\n  position: relative;\r\n  height: 24px;\r\n  display: flex;\r\n  align-items: center;\r\n}\r\n\r\n.value-bar {\r\n  position: absolute;\r\n  left: 0;\r\n  top: 0;\r\n  height: 100%;\r\n  border-radius: 2px;\r\n  opacity: 0.3;\r\n  z-index: 0;\r\n  transition: width 0.5s ease;\r\n}\r\n\r\n.value-text {\r\n  position: relative;\r\n  z-index: 1;\r\n  padding-left: 4px;\r\n}\r\n\r\n@media screen and (max-width: 768px) {\r\n  .consumption-table {\r\n    font-size: 12px;\r\n  }\r\n  \r\n  .consumption-table th,\r\n  .consumption-table td {\r\n    padding: 6px 8px;\r\n  }\r\n  \r\n  .value-content {\r\n    height: 20px;\r\n  }\r\n}\r\n</style> "],"mappings":"AAiCA;EACAA,IAAA;EACAC,KAAA;IACA;MACAC,KAAA;MACAC,SAAA,GACA;QACAH,IAAA;QACAI,IAAA;QACAC,MAAA;MACA,GACA;QACAL,IAAA;QACAI,IAAA;QACAC,MAAA;MACA,GACA;QACAL,IAAA;QACAI,IAAA;QACAC,MAAA;MACA,GACA;QACAL,IAAA;QACAI,IAAA;QACAC,MAAA;MACA,EACA;MACAC,MAAA;IACA;EACA;EACAC,OAAA;IACAC,aAAAC,GAAA;MACA,OAAAA,GAAA,CAAAC,cAAA;QACAC,qBAAA,EAAAF,GAAA;QACAG,qBAAA;MACA;IACA;IACAC,YAAAR,MAAA;MACA,OAAAS,IAAA,CAAAC,GAAA,IAAAV,MAAA;IACA;IACAW,YAAAC,KAAA,EAAAC,QAAA;MACA,MAAAC,UAAA,GAAAF,KAAA,GAAAC,QAAA;MACA,UAAAJ,IAAA,CAAAC,GAAA,CAAAI,UAAA;IACA;IACAC,YAAAC,KAAA;MACA,YAAAf,MAAA,CAAAe,KAAA,QAAAf,MAAA,CAAAgB,MAAA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}