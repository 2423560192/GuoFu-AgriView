{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.for-each.js\";\nexport default {\n  name: 'FertilizerSankey',\n  data() {\n    return {\n      chart: null,\n      fertilizers: ['氮肥', '磷肥', '钾肥', '复合肥'],\n      years: ['2021年', '2022年', '2023年', '2024年'],\n      fertilizerData: {\n        '氮肥': [1006.98, 2508.65, 2500.03, 2498.20],\n        '磷肥': [591.99, 5608.58, 3670.31, 3676.38],\n        '钾肥': [158.00, 301.95, 285.05, 285.80],\n        '复合肥': [620.84, 1755.43, 1505.02, 1515.63]\n      },\n      colors: {\n        '氮肥': '#4cd5ce',\n        '磷肥': '#43aa8b',\n        '钾肥': '#f9c74f',\n        '复合肥': '#f94144'\n      }\n    };\n  },\n  mounted() {\n    this.initChart();\n    window.addEventListener('resize', this.handleResize);\n  },\n  beforeDestroy() {\n    if (this.chart) {\n      this.chart.dispose();\n      this.chart = null;\n    }\n    window.removeEventListener('resize', this.handleResize);\n  },\n  methods: {\n    initChart() {\n      this.chart = this.$echarts.init(this.$refs.chart);\n      this.updateChart();\n    },\n    handleResize() {\n      if (this.chart) {\n        this.chart.resize();\n      }\n    },\n    updateChart() {\n      // 构建桑基图所需的节点和链接数据\n      const nodes = [];\n      const links = [];\n\n      // 生成所有节点（年份+肥料类型）\n      this.years.forEach((year, yearIndex) => {\n        this.fertilizers.forEach(fertilizer => {\n          nodes.push({\n            name: `${year}-${fertilizer}`,\n            value: this.fertilizerData[fertilizer][yearIndex],\n            itemStyle: {\n              color: this.colors[fertilizer]\n            }\n          });\n        });\n      });\n\n      // 生成年份之间的链接\n      for (let yearIndex = 0; yearIndex < this.years.length - 1; yearIndex++) {\n        this.fertilizers.forEach(fertilizer => {\n          const source = `${this.years[yearIndex]}-${fertilizer}`;\n          const target = `${this.years[yearIndex + 1]}-${fertilizer}`;\n          const value = this.fertilizerData[fertilizer][yearIndex + 1];\n          links.push({\n            source,\n            target,\n            value,\n            lineStyle: {\n              color: this.colors[fertilizer],\n              opacity: 0.7\n            }\n          });\n        });\n      }\n      const option = {\n        title: {\n          show: false\n        },\n        tooltip: {\n          trigger: 'item',\n          triggerOn: 'mousemove',\n          formatter: '{b}: {c} 吨'\n        },\n        series: [{\n          type: 'sankey',\n          left: 50,\n          right: 50,\n          data: nodes,\n          links: links,\n          nodeAlign: 'justify',\n          orient: 'horizontal',\n          draggable: false,\n          label: {\n            position: 'top',\n            formatter: params => {\n              const parts = params.name.split('-');\n              return parts[1];\n            },\n            color: '#fff',\n            fontSize: 11\n          },\n          lineStyle: {\n            curveness: 0.5,\n            opacity: 0.7\n          },\n          emphasis: {\n            focus: 'adjacency',\n            lineStyle: {\n              opacity: 1\n            }\n          },\n          layoutIterations: 64\n        }]\n      };\n      this.chart.setOption(option);\n    }\n  }\n};","map":{"version":3,"names":["name","data","chart","fertilizers","years","fertilizerData","colors","mounted","initChart","window","addEventListener","handleResize","beforeDestroy","dispose","removeEventListener","methods","$echarts","init","$refs","updateChart","resize","nodes","links","forEach","year","yearIndex","fertilizer","push","value","itemStyle","color","length","source","target","lineStyle","opacity","option","title","show","tooltip","trigger","triggerOn","formatter","series","type","left","right","nodeAlign","orient","draggable","label","position","params","parts","split","fontSize","curveness","emphasis","focus","layoutIterations","setOption"],"sources":["src/components/charts/FertilizerSankey.vue"],"sourcesContent":["<template>\r\n  <div class=\"chart-wrapper\">\r\n    <div class=\"chart-title\">2021-2024年各类化肥使用量流向图</div>\r\n    <div ref=\"chart\" class=\"chart-container\"></div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: 'FertilizerSankey',\r\n  data() {\r\n    return {\r\n      chart: null,\r\n      fertilizers: ['氮肥', '磷肥', '钾肥', '复合肥'],\r\n      years: ['2021年', '2022年', '2023年', '2024年'],\r\n      fertilizerData: {\r\n        '氮肥': [1006.98, 2508.65, 2500.03, 2498.20],\r\n        '磷肥': [591.99, 5608.58, 3670.31, 3676.38],\r\n        '钾肥': [158.00, 301.95, 285.05, 285.80],\r\n        '复合肥': [620.84, 1755.43, 1505.02, 1515.63]\r\n      },\r\n      colors: {\r\n        '氮肥': '#4cd5ce',\r\n        '磷肥': '#43aa8b',\r\n        '钾肥': '#f9c74f', \r\n        '复合肥': '#f94144'\r\n      }\r\n    };\r\n  },\r\n  mounted() {\r\n    this.initChart();\r\n    window.addEventListener('resize', this.handleResize);\r\n  },\r\n  beforeDestroy() {\r\n    if (this.chart) {\r\n      this.chart.dispose();\r\n      this.chart = null;\r\n    }\r\n    window.removeEventListener('resize', this.handleResize);\r\n  },\r\n  methods: {\r\n    initChart() {\r\n      this.chart = this.$echarts.init(this.$refs.chart);\r\n      this.updateChart();\r\n    },\r\n    handleResize() {\r\n      if (this.chart) {\r\n        this.chart.resize();\r\n      }\r\n    },\r\n    updateChart() {\r\n      // 构建桑基图所需的节点和链接数据\r\n      const nodes = [];\r\n      const links = [];\r\n      \r\n      // 生成所有节点（年份+肥料类型）\r\n      this.years.forEach((year, yearIndex) => {\r\n        this.fertilizers.forEach((fertilizer) => {\r\n          nodes.push({\r\n            name: `${year}-${fertilizer}`,\r\n            value: this.fertilizerData[fertilizer][yearIndex],\r\n            itemStyle: {\r\n              color: this.colors[fertilizer]\r\n            }\r\n          });\r\n        });\r\n      });\r\n      \r\n      // 生成年份之间的链接\r\n      for (let yearIndex = 0; yearIndex < this.years.length - 1; yearIndex++) {\r\n        this.fertilizers.forEach((fertilizer) => {\r\n          const source = `${this.years[yearIndex]}-${fertilizer}`;\r\n          const target = `${this.years[yearIndex + 1]}-${fertilizer}`;\r\n          const value = this.fertilizerData[fertilizer][yearIndex + 1];\r\n          \r\n          links.push({\r\n            source,\r\n            target,\r\n            value,\r\n            lineStyle: {\r\n              color: this.colors[fertilizer],\r\n              opacity: 0.7\r\n            }\r\n          });\r\n        });\r\n      }\r\n      \r\n      const option = {\r\n        title: {\r\n          show: false\r\n        },\r\n        tooltip: {\r\n          trigger: 'item',\r\n          triggerOn: 'mousemove',\r\n          formatter: '{b}: {c} 吨'\r\n        },\r\n        series: [{\r\n          type: 'sankey',\r\n          left: 50,\r\n          right: 50,\r\n          data: nodes,\r\n          links: links,\r\n          nodeAlign: 'justify',\r\n          orient: 'horizontal',\r\n          draggable: false,\r\n          label: {\r\n            position: 'top',\r\n            formatter: (params) => {\r\n              const parts = params.name.split('-');\r\n              return parts[1];\r\n            },\r\n            color: '#fff',\r\n            fontSize: 11\r\n          },\r\n          lineStyle: {\r\n            curveness: 0.5,\r\n            opacity: 0.7\r\n          },\r\n          emphasis: {\r\n            focus: 'adjacency',\r\n            lineStyle: {\r\n              opacity: 1\r\n            }\r\n          },\r\n          layoutIterations: 64\r\n        }]\r\n      };\r\n      \r\n      this.chart.setOption(option);\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.chart-wrapper {\r\n  width: 100%;\r\n  height: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  padding: 5px;\r\n  box-sizing: border-box;\r\n}\r\n\r\n.chart-title {\r\n  font-size: 14px;\r\n  color: #fff;\r\n  text-align: center;\r\n  margin-bottom: 5px;\r\n  flex-shrink: 0;\r\n}\r\n\r\n.chart-container {\r\n  flex: 1;\r\n  width: 100%;\r\n}\r\n\r\n@media screen and (max-width: 480px) {\r\n  .chart-title {\r\n    font-size: 12px;\r\n  }\r\n}\r\n</style> "],"mappings":";;;AAQA;EACAA,IAAA;EACAC,KAAA;IACA;MACAC,KAAA;MACAC,WAAA;MACAC,KAAA;MACAC,cAAA;QACA;QACA;QACA;QACA;MACA;MACAC,MAAA;QACA;QACA;QACA;QACA;MACA;IACA;EACA;EACAC,QAAA;IACA,KAAAC,SAAA;IACAC,MAAA,CAAAC,gBAAA,gBAAAC,YAAA;EACA;EACAC,cAAA;IACA,SAAAV,KAAA;MACA,KAAAA,KAAA,CAAAW,OAAA;MACA,KAAAX,KAAA;IACA;IACAO,MAAA,CAAAK,mBAAA,gBAAAH,YAAA;EACA;EACAI,OAAA;IACAP,UAAA;MACA,KAAAN,KAAA,QAAAc,QAAA,CAAAC,IAAA,MAAAC,KAAA,CAAAhB,KAAA;MACA,KAAAiB,WAAA;IACA;IACAR,aAAA;MACA,SAAAT,KAAA;QACA,KAAAA,KAAA,CAAAkB,MAAA;MACA;IACA;IACAD,YAAA;MACA;MACA,MAAAE,KAAA;MACA,MAAAC,KAAA;;MAEA;MACA,KAAAlB,KAAA,CAAAmB,OAAA,EAAAC,IAAA,EAAAC,SAAA;QACA,KAAAtB,WAAA,CAAAoB,OAAA,CAAAG,UAAA;UACAL,KAAA,CAAAM,IAAA;YACA3B,IAAA,KAAAwB,IAAA,IAAAE,UAAA;YACAE,KAAA,OAAAvB,cAAA,CAAAqB,UAAA,EAAAD,SAAA;YACAI,SAAA;cACAC,KAAA,OAAAxB,MAAA,CAAAoB,UAAA;YACA;UACA;QACA;MACA;;MAEA;MACA,SAAAD,SAAA,MAAAA,SAAA,QAAArB,KAAA,CAAA2B,MAAA,MAAAN,SAAA;QACA,KAAAtB,WAAA,CAAAoB,OAAA,CAAAG,UAAA;UACA,MAAAM,MAAA,WAAA5B,KAAA,CAAAqB,SAAA,KAAAC,UAAA;UACA,MAAAO,MAAA,WAAA7B,KAAA,CAAAqB,SAAA,SAAAC,UAAA;UACA,MAAAE,KAAA,QAAAvB,cAAA,CAAAqB,UAAA,EAAAD,SAAA;UAEAH,KAAA,CAAAK,IAAA;YACAK,MAAA;YACAC,MAAA;YACAL,KAAA;YACAM,SAAA;cACAJ,KAAA,OAAAxB,MAAA,CAAAoB,UAAA;cACAS,OAAA;YACA;UACA;QACA;MACA;MAEA,MAAAC,MAAA;QACAC,KAAA;UACAC,IAAA;QACA;QACAC,OAAA;UACAC,OAAA;UACAC,SAAA;UACAC,SAAA;QACA;QACAC,MAAA;UACAC,IAAA;UACAC,IAAA;UACAC,KAAA;UACA7C,IAAA,EAAAoB,KAAA;UACAC,KAAA,EAAAA,KAAA;UACAyB,SAAA;UACAC,MAAA;UACAC,SAAA;UACAC,KAAA;YACAC,QAAA;YACAT,SAAA,EAAAU,MAAA;cACA,MAAAC,KAAA,GAAAD,MAAA,CAAApD,IAAA,CAAAsD,KAAA;cACA,OAAAD,KAAA;YACA;YACAvB,KAAA;YACAyB,QAAA;UACA;UACArB,SAAA;YACAsB,SAAA;YACArB,OAAA;UACA;UACAsB,QAAA;YACAC,KAAA;YACAxB,SAAA;cACAC,OAAA;YACA;UACA;UACAwB,gBAAA;QACA;MACA;MAEA,KAAAzD,KAAA,CAAA0D,SAAA,CAAAxB,MAAA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}