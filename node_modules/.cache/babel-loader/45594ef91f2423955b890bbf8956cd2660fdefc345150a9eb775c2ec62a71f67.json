{"ast":null,"code":"import { economicCropsData } from '../../data/agricultural-data.js';\nexport default {\n  name: 'EconomicCropsTrend',\n  data() {\n    return {\n      chart: null,\n      loading: true\n    };\n  },\n  mounted() {\n    // 模拟加载延迟\n    setTimeout(() => {\n      this.loading = false;\n      this.$nextTick(() => {\n        this.initChart();\n      });\n    }, 500);\n    window.addEventListener('resize', this.handleResize);\n  },\n  beforeDestroy() {\n    window.removeEventListener('resize', this.handleResize);\n    if (this.chart) {\n      this.chart.dispose();\n    }\n  },\n  methods: {\n    initChart() {\n      this.chart = this.$echarts.init(this.$refs.chart);\n      const option = {\n        title: {\n          text: '2021-2024年经济作物总播种面积趋势',\n          textStyle: {\n            color: '#fff',\n            fontSize: 14,\n            fontWeight: 'normal'\n          },\n          left: 'center',\n          top: 10\n        },\n        tooltip: {\n          trigger: 'axis',\n          backgroundColor: 'rgba(0, 0, 0, 0.7)',\n          borderColor: 'rgba(76, 213, 206, 0.3)',\n          borderWidth: 1,\n          textStyle: {\n            color: '#fff'\n          },\n          axisPointer: {\n            type: 'line',\n            lineStyle: {\n              color: 'rgba(76, 213, 206, 0.5)',\n              width: 1\n            }\n          }\n        },\n        grid: {\n          left: '5%',\n          right: '5%',\n          bottom: '10%',\n          top: '20%',\n          containLabel: true\n        },\n        xAxis: {\n          type: 'category',\n          data: economicCropsData.totalArea.years,\n          axisLine: {\n            lineStyle: {\n              color: 'rgba(255, 255, 255, 0.3)'\n            }\n          },\n          axisTick: {\n            show: false\n          },\n          axisLabel: {\n            color: '#fff',\n            fontSize: 12,\n            margin: 10\n          }\n        },\n        yAxis: {\n          type: 'value',\n          name: '面积(亩)',\n          nameTextStyle: {\n            color: 'rgba(255, 255, 255, 0.7)',\n            fontSize: 12,\n            padding: [0, 0, 0, 5]\n          },\n          axisLine: {\n            show: false\n          },\n          axisTick: {\n            show: false\n          },\n          axisLabel: {\n            color: '#fff',\n            fontSize: 12\n          },\n          splitLine: {\n            lineStyle: {\n              color: 'rgba(255, 255, 255, 0.1)',\n              type: 'dashed'\n            }\n          }\n        },\n        series: [{\n          name: '总播种面积',\n          type: 'line',\n          data: economicCropsData.totalArea.data,\n          smooth: true,\n          lineStyle: {\n            width: 4,\n            color: {\n              type: 'linear',\n              x: 0,\n              y: 0,\n              x2: 0,\n              y2: 1,\n              colorStops: [{\n                offset: 0,\n                color: '#4cd5ce'\n              }, {\n                offset: 1,\n                color: '#43aa8b'\n              }]\n            },\n            shadowColor: 'rgba(76, 213, 206, 0.3)',\n            shadowBlur: 10\n          },\n          symbol: 'circle',\n          symbolSize: 10,\n          itemStyle: {\n            color: '#4cd5ce',\n            borderColor: '#fff',\n            borderWidth: 2,\n            shadowColor: 'rgba(76, 213, 206, 0.5)',\n            shadowBlur: 5\n          },\n          emphasis: {\n            scale: true,\n            itemStyle: {\n              borderWidth: 3\n            }\n          },\n          areaStyle: {\n            color: new this.$echarts.graphic.LinearGradient(0, 0, 0, 1, [{\n              offset: 0,\n              color: 'rgba(76, 213, 206, 0.8)'\n            }, {\n              offset: 0.8,\n              color: 'rgba(76, 213, 206, 0.1)'\n            }, {\n              offset: 1,\n              color: 'rgba(76, 213, 206, 0)'\n            }])\n          }\n        }],\n        animationDuration: 2000,\n        animationEasing: 'cubicInOut'\n      };\n      this.chart.setOption(option);\n    },\n    handleResize() {\n      if (this.chart) {\n        this.chart.resize();\n      }\n    }\n  }\n};","map":{"version":3,"names":["economicCropsData","name","data","chart","loading","mounted","setTimeout","$nextTick","initChart","window","addEventListener","handleResize","beforeDestroy","removeEventListener","dispose","methods","$echarts","init","$refs","option","title","text","textStyle","color","fontSize","fontWeight","left","top","tooltip","trigger","backgroundColor","borderColor","borderWidth","axisPointer","type","lineStyle","width","grid","right","bottom","containLabel","xAxis","totalArea","years","axisLine","axisTick","show","axisLabel","margin","yAxis","nameTextStyle","padding","splitLine","series","smooth","x","y","x2","y2","colorStops","offset","shadowColor","shadowBlur","symbol","symbolSize","itemStyle","emphasis","scale","areaStyle","graphic","LinearGradient","animationDuration","animationEasing","setOption","resize"],"sources":["src/components/charts/EconomicCropsTrend.vue"],"sourcesContent":["<template>\r\n  <div class=\"chart-wrapper\">\r\n    <div class=\"chart-loading\" v-if=\"loading\">\r\n      <div class=\"loading-spinner\"></div>\r\n      <div>加载中...</div>\r\n    </div>\r\n    <div ref=\"chart\" class=\"chart\" :class=\"{ 'is-loading': loading }\"></div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { economicCropsData } from '../../data/agricultural-data.js'\r\n\r\nexport default {\r\n  name: 'EconomicCropsTrend',\r\n  data() {\r\n    return {\r\n      chart: null,\r\n      loading: true\r\n    }\r\n  },\r\n  mounted() {\r\n    // 模拟加载延迟\r\n    setTimeout(() => {\r\n      this.loading = false\r\n      this.$nextTick(() => {\r\n        this.initChart()\r\n      })\r\n    }, 500)\r\n    \r\n    window.addEventListener('resize', this.handleResize)\r\n  },\r\n  beforeDestroy() {\r\n    window.removeEventListener('resize', this.handleResize)\r\n    if (this.chart) {\r\n      this.chart.dispose()\r\n    }\r\n  },\r\n  methods: {\r\n    initChart() {\r\n      this.chart = this.$echarts.init(this.$refs.chart)\r\n      const option = {\r\n        title: {\r\n          text: '2021-2024年经济作物总播种面积趋势',\r\n          textStyle: {\r\n            color: '#fff',\r\n            fontSize: 14,\r\n            fontWeight: 'normal'\r\n          },\r\n          left: 'center',\r\n          top: 10\r\n        },\r\n        tooltip: {\r\n          trigger: 'axis',\r\n          backgroundColor: 'rgba(0, 0, 0, 0.7)',\r\n          borderColor: 'rgba(76, 213, 206, 0.3)',\r\n          borderWidth: 1,\r\n          textStyle: {\r\n            color: '#fff'\r\n          },\r\n          axisPointer: {\r\n            type: 'line',\r\n            lineStyle: {\r\n              color: 'rgba(76, 213, 206, 0.5)',\r\n              width: 1\r\n            }\r\n          }\r\n        },\r\n        grid: {\r\n          left: '5%',\r\n          right: '5%',\r\n          bottom: '10%',\r\n          top: '20%',\r\n          containLabel: true\r\n        },\r\n        xAxis: {\r\n          type: 'category',\r\n          data: economicCropsData.totalArea.years,\r\n          axisLine: {\r\n            lineStyle: {\r\n              color: 'rgba(255, 255, 255, 0.3)'\r\n            }\r\n          },\r\n          axisTick: {\r\n            show: false\r\n          },\r\n          axisLabel: {\r\n            color: '#fff',\r\n            fontSize: 12,\r\n            margin: 10\r\n          }\r\n        },\r\n        yAxis: {\r\n          type: 'value',\r\n          name: '面积(亩)',\r\n          nameTextStyle: {\r\n            color: 'rgba(255, 255, 255, 0.7)',\r\n            fontSize: 12,\r\n            padding: [0, 0, 0, 5]\r\n          },\r\n          axisLine: {\r\n            show: false\r\n          },\r\n          axisTick: {\r\n            show: false\r\n          },\r\n          axisLabel: {\r\n            color: '#fff',\r\n            fontSize: 12\r\n          },\r\n          splitLine: {\r\n            lineStyle: {\r\n              color: 'rgba(255, 255, 255, 0.1)',\r\n              type: 'dashed'\r\n            }\r\n          }\r\n        },\r\n        series: [\r\n          {\r\n            name: '总播种面积',\r\n            type: 'line',\r\n            data: economicCropsData.totalArea.data,\r\n            smooth: true,\r\n            lineStyle: {\r\n              width: 4,\r\n              color: {\r\n                type: 'linear',\r\n                x: 0,\r\n                y: 0,\r\n                x2: 0,\r\n                y2: 1,\r\n                colorStops: [{\r\n                  offset: 0, color: '#4cd5ce'\r\n                }, {\r\n                  offset: 1, color: '#43aa8b'\r\n                }]\r\n              },\r\n              shadowColor: 'rgba(76, 213, 206, 0.3)',\r\n              shadowBlur: 10\r\n            },\r\n            symbol: 'circle',\r\n            symbolSize: 10,\r\n            itemStyle: {\r\n              color: '#4cd5ce',\r\n              borderColor: '#fff',\r\n              borderWidth: 2,\r\n              shadowColor: 'rgba(76, 213, 206, 0.5)',\r\n              shadowBlur: 5\r\n            },\r\n            emphasis: {\r\n              scale: true,\r\n              itemStyle: {\r\n                borderWidth: 3\r\n              }\r\n            },\r\n            areaStyle: {\r\n              color: new this.$echarts.graphic.LinearGradient(0, 0, 0, 1, [\r\n                { offset: 0, color: 'rgba(76, 213, 206, 0.8)' },\r\n                { offset: 0.8, color: 'rgba(76, 213, 206, 0.1)' },\r\n                { offset: 1, color: 'rgba(76, 213, 206, 0)' }\r\n              ])\r\n            }\r\n          }\r\n        ],\r\n        animationDuration: 2000,\r\n        animationEasing: 'cubicInOut'\r\n      }\r\n      this.chart.setOption(option)\r\n    },\r\n    handleResize() {\r\n      if (this.chart) {\r\n        this.chart.resize()\r\n      }\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.chart-wrapper {\r\n  width: 100%;\r\n  height: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  position: relative;\r\n}\r\n\r\n.chart {\r\n  flex: 1;\r\n  transition: opacity 0.3s ease;\r\n}\r\n\r\n.chart.is-loading {\r\n  opacity: 0;\r\n}\r\n\r\n.chart-loading {\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  background: rgba(0, 0, 0, 0.2);\r\n  color: rgba(255, 255, 255, 0.7);\r\n  font-size: 14px;\r\n  z-index: 10;\r\n}\r\n\r\n.loading-spinner {\r\n  width: 30px;\r\n  height: 30px;\r\n  border: 3px solid rgba(76, 213, 206, 0.3);\r\n  border-radius: 50%;\r\n  border-top-color: #4cd5ce;\r\n  animation: spin 1s ease-in-out infinite;\r\n  margin-bottom: 10px;\r\n}\r\n\r\n@keyframes spin {\r\n  to { transform: rotate(360deg); }\r\n}\r\n</style> "],"mappings":"AAWA,SAAAA,iBAAA;AAEA;EACAC,IAAA;EACAC,KAAA;IACA;MACAC,KAAA;MACAC,OAAA;IACA;EACA;EACAC,QAAA;IACA;IACAC,UAAA;MACA,KAAAF,OAAA;MACA,KAAAG,SAAA;QACA,KAAAC,SAAA;MACA;IACA;IAEAC,MAAA,CAAAC,gBAAA,gBAAAC,YAAA;EACA;EACAC,cAAA;IACAH,MAAA,CAAAI,mBAAA,gBAAAF,YAAA;IACA,SAAAR,KAAA;MACA,KAAAA,KAAA,CAAAW,OAAA;IACA;EACA;EACAC,OAAA;IACAP,UAAA;MACA,KAAAL,KAAA,QAAAa,QAAA,CAAAC,IAAA,MAAAC,KAAA,CAAAf,KAAA;MACA,MAAAgB,MAAA;QACAC,KAAA;UACAC,IAAA;UACAC,SAAA;YACAC,KAAA;YACAC,QAAA;YACAC,UAAA;UACA;UACAC,IAAA;UACAC,GAAA;QACA;QACAC,OAAA;UACAC,OAAA;UACAC,eAAA;UACAC,WAAA;UACAC,WAAA;UACAV,SAAA;YACAC,KAAA;UACA;UACAU,WAAA;YACAC,IAAA;YACAC,SAAA;cACAZ,KAAA;cACAa,KAAA;YACA;UACA;QACA;QACAC,IAAA;UACAX,IAAA;UACAY,KAAA;UACAC,MAAA;UACAZ,GAAA;UACAa,YAAA;QACA;QACAC,KAAA;UACAP,IAAA;UACAhC,IAAA,EAAAF,iBAAA,CAAA0C,SAAA,CAAAC,KAAA;UACAC,QAAA;YACAT,SAAA;cACAZ,KAAA;YACA;UACA;UACAsB,QAAA;YACAC,IAAA;UACA;UACAC,SAAA;YACAxB,KAAA;YACAC,QAAA;YACAwB,MAAA;UACA;QACA;QACAC,KAAA;UACAf,IAAA;UACAjC,IAAA;UACAiD,aAAA;YACA3B,KAAA;YACAC,QAAA;YACA2B,OAAA;UACA;UACAP,QAAA;YACAE,IAAA;UACA;UACAD,QAAA;YACAC,IAAA;UACA;UACAC,SAAA;YACAxB,KAAA;YACAC,QAAA;UACA;UACA4B,SAAA;YACAjB,SAAA;cACAZ,KAAA;cACAW,IAAA;YACA;UACA;QACA;QACAmB,MAAA,GACA;UACApD,IAAA;UACAiC,IAAA;UACAhC,IAAA,EAAAF,iBAAA,CAAA0C,SAAA,CAAAxC,IAAA;UACAoD,MAAA;UACAnB,SAAA;YACAC,KAAA;YACAb,KAAA;cACAW,IAAA;cACAqB,CAAA;cACAC,CAAA;cACAC,EAAA;cACAC,EAAA;cACAC,UAAA;gBACAC,MAAA;gBAAArC,KAAA;cACA;gBACAqC,MAAA;gBAAArC,KAAA;cACA;YACA;YACAsC,WAAA;YACAC,UAAA;UACA;UACAC,MAAA;UACAC,UAAA;UACAC,SAAA;YACA1C,KAAA;YACAQ,WAAA;YACAC,WAAA;YACA6B,WAAA;YACAC,UAAA;UACA;UACAI,QAAA;YACAC,KAAA;YACAF,SAAA;cACAjC,WAAA;YACA;UACA;UACAoC,SAAA;YACA7C,KAAA,WAAAP,QAAA,CAAAqD,OAAA,CAAAC,cAAA,cACA;cAAAV,MAAA;cAAArC,KAAA;YAAA,GACA;cAAAqC,MAAA;cAAArC,KAAA;YAAA,GACA;cAAAqC,MAAA;cAAArC,KAAA;YAAA,EACA;UACA;QACA,EACA;QACAgD,iBAAA;QACAC,eAAA;MACA;MACA,KAAArE,KAAA,CAAAsE,SAAA,CAAAtD,MAAA;IACA;IACAR,aAAA;MACA,SAAAR,KAAA;QACA,KAAAA,KAAA,CAAAuE,MAAA;MACA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}