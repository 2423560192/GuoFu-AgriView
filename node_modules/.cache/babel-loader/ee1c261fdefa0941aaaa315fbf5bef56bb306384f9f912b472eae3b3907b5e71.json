{"ast":null,"code":"export default {\n  name: 'EconomicCropsPie',\n  data() {\n    return {\n      chart: null,\n      currentYear: '2024',\n      years: ['2024', '2023', '2022', '2021'],\n      pieData: {\n        '2024': [{\n          name: '油料',\n          value: 12.74\n        }, {\n          name: '烟叶',\n          value: 1.73\n        }, {\n          name: '中草药材',\n          value: 11.55\n        }, {\n          name: '蔬菜及食用菌',\n          value: 63.39\n        }, {\n          name: '瓜果',\n          value: 3.25\n        }, {\n          name: '其他农作物',\n          value: 7.26\n        }, {\n          name: '食用坚果',\n          value: 0.08\n        }],\n        '2023': [{\n          name: '油料',\n          value: 12.58\n        }, {\n          name: '烟叶',\n          value: 1.77\n        }, {\n          name: '中草药材',\n          value: 11.45\n        }, {\n          name: '蔬菜及食用菌',\n          value: 63.99\n        }, {\n          name: '瓜果',\n          value: 2.26\n        }, {\n          name: '其他农作物',\n          value: 7.87\n        }, {\n          name: '食用坚果',\n          value: 0.08\n        }],\n        '2022': [{\n          name: '油料',\n          value: 35.48\n        }, {\n          name: '烟叶',\n          value: 5.38\n        }, {\n          name: '中草药材',\n          value: 35.33\n        }, {\n          name: '其他农作物',\n          value: 23.81\n        }],\n        '2021': [{\n          name: '油料',\n          value: 13.60\n        }, {\n          name: '烟叶',\n          value: 2.07\n        }, {\n          name: '中草药材',\n          value: 13.61\n        }, {\n          name: '蔬菜及食用菌',\n          value: 70.72\n        }]\n      }\n    };\n  },\n  mounted() {\n    this.initChart();\n    window.addEventListener('resize', this.handleResize);\n    if (window.ResizeObserver) {\n      this.observer = new ResizeObserver(() => {\n        this.handleResize();\n      });\n      this.observer.observe(this.$refs.chart);\n    }\n  },\n  beforeDestroy() {\n    window.removeEventListener('resize', this.handleResize);\n    if (this.observer) {\n      this.observer.disconnect();\n    }\n    if (this.chart) {\n      this.chart.dispose();\n    }\n  },\n  watch: {\n    currentYear() {\n      this.updateChart();\n    }\n  },\n  methods: {\n    initChart() {\n      this.chart = this.$echarts.init(this.$refs.chart);\n      this.updateChart();\n    },\n    updateChart() {\n      const option = {\n        title: {\n          text: `${this.currentYear}年各类经济作物面积占比`,\n          textStyle: {\n            color: '#fff',\n            fontSize: 14\n          },\n          left: 'center'\n        },\n        tooltip: {\n          trigger: 'item',\n          formatter: '{b}: {c}%',\n          backgroundColor: 'rgba(0, 0, 0, 0.7)',\n          borderColor: 'rgba(255, 255, 255, 0.2)',\n          textStyle: {\n            color: '#fff'\n          }\n        },\n        legend: {\n          orient: 'vertical',\n          right: 10,\n          top: 'center',\n          textStyle: {\n            color: 'rgba(255, 255, 255, 0.7)',\n            fontSize: 12\n          }\n        },\n        series: [{\n          name: '面积占比',\n          type: 'pie',\n          radius: ['35%', '70%'],\n          center: ['40%', '50%'],\n          avoidLabelOverlap: false,\n          label: {\n            show: false\n          },\n          emphasis: {\n            label: {\n              show: true,\n              fontSize: 14,\n              fontWeight: 'bold',\n              color: '#fff'\n            }\n          },\n          labelLine: {\n            show: false\n          },\n          data: this.pieData[this.currentYear]\n        }],\n        color: ['#f9c74f', '#90be6d', '#43aa8b', '#4d908e', '#577590', '#277da1', '#f94144']\n      };\n      this.chart.setOption(option, true);\n    },\n    handleResize() {\n      if (this.chart) {\n        this.chart.resize();\n        const containerWidth = this.$refs.chart.clientWidth;\n        if (containerWidth < 300) {\n          this.chart.setOption({\n            legend: {\n              orient: 'horizontal',\n              right: 'center',\n              top: 'bottom',\n              itemWidth: 10,\n              itemHeight: 6,\n              itemGap: 6,\n              textStyle: {\n                fontSize: 10\n              }\n            },\n            series: [{\n              radius: ['30%', '60%'],\n              center: ['50%', '45%']\n            }]\n          });\n        } else {\n          this.chart.setOption({\n            legend: {\n              orient: 'vertical',\n              right: 10,\n              top: 'center',\n              itemWidth: 12,\n              itemHeight: 8,\n              textStyle: {\n                fontSize: 12\n              }\n            },\n            series: [{\n              radius: ['35%', '70%'],\n              center: ['40%', '50%']\n            }]\n          });\n        }\n      }\n    }\n  }\n};","map":{"version":3,"names":["name","data","chart","currentYear","years","pieData","value","mounted","initChart","window","addEventListener","handleResize","ResizeObserver","observer","observe","$refs","beforeDestroy","removeEventListener","disconnect","dispose","watch","updateChart","methods","$echarts","init","option","title","text","textStyle","color","fontSize","left","tooltip","trigger","formatter","backgroundColor","borderColor","legend","orient","right","top","series","type","radius","center","avoidLabelOverlap","label","show","emphasis","fontWeight","labelLine","setOption","resize","containerWidth","clientWidth","itemWidth","itemHeight","itemGap"],"sources":["src/components/charts/EconomicCropsPie.vue"],"sourcesContent":["<template>\r\n  <div class=\"chart-wrapper\">\r\n    <div class=\"year-tabs\">\r\n      <div \r\n        v-for=\"year in years\" \r\n        :key=\"year\" \r\n        :class=\"['year-tab', { active: currentYear === year }]\" \r\n        @click=\"currentYear = year\"\r\n      >\r\n        {{ year }}年\r\n      </div>\r\n    </div>\r\n    <div ref=\"chart\" class=\"chart\"></div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: 'EconomicCropsPie',\r\n  data() {\r\n    return {\r\n      chart: null,\r\n      currentYear: '2024',\r\n      years: ['2024', '2023', '2022', '2021'],\r\n      pieData: {\r\n        '2024': [\r\n          { name: '油料', value: 12.74 },\r\n          { name: '烟叶', value: 1.73 },\r\n          { name: '中草药材', value: 11.55 },\r\n          { name: '蔬菜及食用菌', value: 63.39 },\r\n          { name: '瓜果', value: 3.25 },\r\n          { name: '其他农作物', value: 7.26 },\r\n          { name: '食用坚果', value: 0.08 }\r\n        ],\r\n        '2023': [\r\n          { name: '油料', value: 12.58 },\r\n          { name: '烟叶', value: 1.77 },\r\n          { name: '中草药材', value: 11.45 },\r\n          { name: '蔬菜及食用菌', value: 63.99 },\r\n          { name: '瓜果', value: 2.26 },\r\n          { name: '其他农作物', value: 7.87 },\r\n          { name: '食用坚果', value: 0.08 }\r\n        ],\r\n        '2022': [\r\n          { name: '油料', value: 35.48 },\r\n          { name: '烟叶', value: 5.38 },\r\n          { name: '中草药材', value: 35.33 },\r\n          { name: '其他农作物', value: 23.81 }\r\n        ],\r\n        '2021': [\r\n          { name: '油料', value: 13.60 },\r\n          { name: '烟叶', value: 2.07 },\r\n          { name: '中草药材', value: 13.61 },\r\n          { name: '蔬菜及食用菌', value: 70.72 }\r\n        ]\r\n      }\r\n    }\r\n  },\r\n  mounted() {\r\n    this.initChart()\r\n    window.addEventListener('resize', this.handleResize)\r\n    if (window.ResizeObserver) {\r\n      this.observer = new ResizeObserver(() => {\r\n        this.handleResize()\r\n      })\r\n      this.observer.observe(this.$refs.chart)\r\n    }\r\n  },\r\n  beforeDestroy() {\r\n    window.removeEventListener('resize', this.handleResize)\r\n    if (this.observer) {\r\n      this.observer.disconnect()\r\n    }\r\n    if (this.chart) {\r\n      this.chart.dispose()\r\n    }\r\n  },\r\n  watch: {\r\n    currentYear() {\r\n      this.updateChart()\r\n    }\r\n  },\r\n  methods: {\r\n    initChart() {\r\n      this.chart = this.$echarts.init(this.$refs.chart)\r\n      this.updateChart()\r\n    },\r\n    updateChart() {\r\n      const option = {\r\n        title: {\r\n          text: `${this.currentYear}年各类经济作物面积占比`,\r\n          textStyle: {\r\n            color: '#fff',\r\n            fontSize: 14\r\n          },\r\n          left: 'center'\r\n        },\r\n        tooltip: {\r\n          trigger: 'item',\r\n          formatter: '{b}: {c}%',\r\n          backgroundColor: 'rgba(0, 0, 0, 0.7)',\r\n          borderColor: 'rgba(255, 255, 255, 0.2)',\r\n          textStyle: {\r\n            color: '#fff'\r\n          }\r\n        },\r\n        legend: {\r\n          orient: 'vertical',\r\n          right: 10,\r\n          top: 'center',\r\n          textStyle: {\r\n            color: 'rgba(255, 255, 255, 0.7)',\r\n            fontSize: 12\r\n          }\r\n        },\r\n        series: [\r\n          {\r\n            name: '面积占比',\r\n            type: 'pie',\r\n            radius: ['35%', '70%'],\r\n            center: ['40%', '50%'],\r\n            avoidLabelOverlap: false,\r\n            label: {\r\n              show: false\r\n            },\r\n            emphasis: {\r\n              label: {\r\n                show: true,\r\n                fontSize: 14,\r\n                fontWeight: 'bold',\r\n                color: '#fff'\r\n              }\r\n            },\r\n            labelLine: {\r\n              show: false\r\n            },\r\n            data: this.pieData[this.currentYear]\r\n          }\r\n        ],\r\n        color: ['#f9c74f', '#90be6d', '#43aa8b', '#4d908e', '#577590', '#277da1', '#f94144']\r\n      }\r\n      this.chart.setOption(option, true)\r\n    },\r\n    handleResize() {\r\n      if (this.chart) {\r\n        this.chart.resize()\r\n        \r\n        const containerWidth = this.$refs.chart.clientWidth\r\n        if (containerWidth < 300) {\r\n          this.chart.setOption({\r\n            legend: {\r\n              orient: 'horizontal',\r\n              right: 'center',\r\n              top: 'bottom',\r\n              itemWidth: 10,\r\n              itemHeight: 6,\r\n              itemGap: 6,\r\n              textStyle: {\r\n                fontSize: 10\r\n              }\r\n            },\r\n            series: [{\r\n              radius: ['30%', '60%'],\r\n              center: ['50%', '45%'],\r\n            }]\r\n          })\r\n        } else {\r\n          this.chart.setOption({\r\n            legend: {\r\n              orient: 'vertical',\r\n              right: 10,\r\n              top: 'center',\r\n              itemWidth: 12,\r\n              itemHeight: 8,\r\n              textStyle: {\r\n                fontSize: 12\r\n              }\r\n            },\r\n            series: [{\r\n              radius: ['35%', '70%'],\r\n              center: ['40%', '50%'],\r\n            }]\r\n          })\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.chart-wrapper {\r\n  width: 100%;\r\n  height: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  padding: 0 10px;\r\n}\r\n\r\n.year-tabs {\r\n  display: flex;\r\n  justify-content: center;\r\n  flex-wrap: wrap;\r\n  margin-bottom: 5px;\r\n}\r\n\r\n.year-tab {\r\n  padding: 5px 10px;\r\n  cursor: pointer;\r\n  font-size: 12px;\r\n  color: rgba(255, 255, 255, 0.7);\r\n  border-radius: 4px;\r\n  margin: 10px;\r\n  transition: all 0.3s ease;\r\n  border: 1px solid transparent;\r\n}\r\n\r\n.year-tab:hover {\r\n  color: #fff;\r\n  background: rgba(76, 213, 206, 0.1);\r\n}\r\n\r\n.year-tab.active {\r\n  color: #4cd5ce;\r\n  font-weight: bold;\r\n  border: 1px solid rgba(76, 213, 206, 0.5);\r\n}\r\n\r\n.chart {\r\n  flex: 1;\r\n}\r\n\r\n@media screen and (max-width: 480px) {\r\n  .year-tab {\r\n    padding: 3px 6px;\r\n    font-size: 10px;\r\n    margin: 1px;\r\n  }\r\n}\r\n</style> "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}