{"ast":null,"code":"export default {\n  name: 'GrainPyramid',\n  data() {\n    return {\n      currentYear: '2024',\n      // 默认显示2024年\n      years: ['2024', '2023', '2022', '2021'],\n      dataMap: {\n        '2024': {\n          grain: 61.59,\n          beans: 9.62,\n          potato: 28.80\n        },\n        '2023': {\n          grain: 61.67,\n          beans: 9.58,\n          potato: 28.75\n        },\n        '2022': {\n          grain: 61.91,\n          beans: 9.36,\n          potato: 28.73\n        },\n        '2021': {\n          grain: 62.37,\n          beans: 8.65,\n          potato: 28.98\n        }\n      }\n    };\n  },\n  methods: {\n    getSegmentStyle(year, type) {\n      // 计算金字塔段的宽度和背景色\n      const data = this.dataMap[year];\n      let widthPercent = 0;\n      let bgColor = '';\n      switch (type) {\n        case 'grain':\n          widthPercent = 100; // 谷物占据底部全宽\n          bgColor = '#4cd5ce';\n          break;\n        case 'beans':\n          // 豆类宽度 = (豆类 + 折粮薯类) / 总和 * 100\n          widthPercent = (data.beans + data.potato) / (data.grain + data.beans + data.potato) * 100;\n          bgColor = '#f9c74f';\n          break;\n        case 'potato':\n          // 折粮薯类宽度 = 折粮薯类 / 总和 * 100\n          widthPercent = data.potato / (data.grain + data.beans + data.potato) * 100;\n          bgColor = '#90be6d';\n          break;\n      }\n\n      // 返回样式对象\n      return {\n        width: `${widthPercent}%`,\n        backgroundColor: bgColor\n      };\n    }\n  }\n};","map":{"version":3,"names":["name","data","currentYear","years","dataMap","grain","beans","potato","methods","getSegmentStyle","year","type","widthPercent","bgColor","width","backgroundColor"],"sources":["src/components/charts/GrainPyramid.vue"],"sourcesContent":["<template>\r\n  <div class=\"pyramid-container\">\r\n    <div class=\"chart-title\">粮食作物面积占比金字塔</div>\r\n    \r\n    <!-- 年份选择器 -->\r\n    <div class=\"year-tabs\">\r\n      <div \r\n        v-for=\"year in years\" \r\n        :key=\"year\" \r\n        :class=\"['year-tab', { active: currentYear === year }]\" \r\n        @click=\"currentYear = year\"\r\n      >\r\n        {{ year }}年\r\n      </div>\r\n    </div>\r\n    \r\n    <!-- 单个金字塔 -->\r\n    <div class=\"pyramid-wrapper\">\r\n      <div class=\"pyramid\">\r\n        <!-- 折粮薯类 - 顶部 -->\r\n        <div class=\"pyramid-segment potato\" :style=\"getSegmentStyle(currentYear, 'potato')\">\r\n          <div class=\"segment-label\">折粮薯类</div>\r\n          <div class=\"segment-value\">{{ dataMap[currentYear].potato }}%</div>\r\n        </div>\r\n        <!-- 豆类 - 中部 -->\r\n        <div class=\"pyramid-segment beans\" :style=\"getSegmentStyle(currentYear, 'beans')\">\r\n          <div class=\"segment-label\">豆类</div>\r\n          <div class=\"segment-value\">{{ dataMap[currentYear].beans }}%</div>\r\n        </div>\r\n        <!-- 谷物 - 底部 -->\r\n        <div class=\"pyramid-segment grain\" :style=\"getSegmentStyle(currentYear, 'grain')\">\r\n          <div class=\"segment-label\">谷物</div>\r\n          <div class=\"segment-value\">{{ dataMap[currentYear].grain }}%</div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: 'GrainPyramid',\r\n  data() {\r\n    return {\r\n      currentYear: '2024', // 默认显示2024年\r\n      years: ['2024', '2023', '2022', '2021'],\r\n      dataMap: {\r\n        '2024': { grain: 61.59, beans: 9.62, potato: 28.80 },\r\n        '2023': { grain: 61.67, beans: 9.58, potato: 28.75 },\r\n        '2022': { grain: 61.91, beans: 9.36, potato: 28.73 },\r\n        '2021': { grain: 62.37, beans: 8.65, potato: 28.98 }\r\n      }\r\n    }\r\n  },\r\n  methods: {\r\n    getSegmentStyle(year, type) {\r\n      // 计算金字塔段的宽度和背景色\r\n      const data = this.dataMap[year];\r\n      let widthPercent = 0;\r\n      let bgColor = '';\r\n      \r\n      switch(type) {\r\n        case 'grain':\r\n          widthPercent = 100; // 谷物占据底部全宽\r\n          bgColor = '#4cd5ce';\r\n          break;\r\n        case 'beans':\r\n          // 豆类宽度 = (豆类 + 折粮薯类) / 总和 * 100\r\n          widthPercent = ((data.beans + data.potato) / (data.grain + data.beans + data.potato)) * 100;\r\n          bgColor = '#f9c74f';\r\n          break;\r\n        case 'potato':\r\n          // 折粮薯类宽度 = 折粮薯类 / 总和 * 100\r\n          widthPercent = (data.potato / (data.grain + data.beans + data.potato)) * 100;\r\n          bgColor = '#90be6d';\r\n          break;\r\n      }\r\n      \r\n      // 返回样式对象\r\n      return {\r\n        width: `${widthPercent}%`,\r\n        backgroundColor: bgColor\r\n      }\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.pyramid-container {\r\n  width: 100%;\r\n  height: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  padding: 10px;\r\n  box-sizing: border-box;\r\n}\r\n\r\n.chart-title {\r\n  text-align: center;\r\n  color: #fff;\r\n  font-size: 14px;\r\n  margin-bottom: 10px;\r\n}\r\n\r\n/* 年份选择器样式 */\r\n.year-tabs {\r\n  display: flex;\r\n  justify-content: center;\r\n  margin-bottom: 15px;\r\n}\r\n\r\n.year-tab {\r\n  padding: 4px 10px;\r\n  margin: 0 5px;\r\n  cursor: pointer;\r\n  color: rgba(255, 255, 255, 0.7);\r\n  font-size: 13px;\r\n  border-radius: 4px;\r\n  transition: all 0.3s ease;\r\n  border: 1px solid transparent;\r\n}\r\n\r\n.year-tab:hover {\r\n  color: #fff;\r\n  background: rgba(76, 213, 206, 0.1);\r\n}\r\n\r\n.year-tab.active {\r\n  color: #4cd5ce;\r\n  font-weight: bold;\r\n  border: 1px solid rgba(76, 213, 206, 0.5);\r\n}\r\n\r\n.pyramid-wrapper {\r\n  flex: 1;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n}\r\n\r\n.pyramid {\r\n  width: 80%;\r\n  max-width: 400px;\r\n  height: 70%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n}\r\n\r\n.pyramid-segment {\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  height: 33%;\r\n  margin-bottom: 10px;\r\n  border-radius: 6px;\r\n  position: relative;\r\n  overflow: hidden;\r\n  color: #fff;\r\n  text-align: center;\r\n  transition: all 0.3s ease;\r\n  box-shadow: 0 5px 15px rgba(0, 0, 0, 0.2);\r\n}\r\n\r\n.pyramid-segment:hover {\r\n  transform: translateY(-3px);\r\n  filter: brightness(1.2);\r\n}\r\n\r\n.segment-label {\r\n  font-size: 16px;\r\n  font-weight: bold;\r\n  margin-right: 8px;\r\n}\r\n\r\n.segment-value {\r\n  font-size: 18px;\r\n  font-weight: bold;\r\n}\r\n\r\n.grain {\r\n  box-shadow: 0 5px 15px rgba(0, 0, 0, 0.25);\r\n}\r\n\r\n.beans {\r\n  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.2);\r\n}\r\n\r\n.potato {\r\n  box-shadow: 0 3px 10px rgba(0, 0, 0, 0.15);\r\n}\r\n\r\n/* 响应式调整 */\r\n@media screen and (max-width: 1024px) {\r\n  .pyramid {\r\n    width: 90%;\r\n  }\r\n}\r\n\r\n@media screen and (max-width: 768px) {\r\n  .segment-label {\r\n    font-size: 14px;\r\n  }\r\n  \r\n  .segment-value {\r\n    font-size: 16px;\r\n  }\r\n  \r\n  .pyramid {\r\n    width: 95%;\r\n  }\r\n}\r\n\r\n@media screen and (max-width: 480px) {\r\n  .pyramid-container {\r\n    padding: 5px;\r\n  }\r\n  \r\n  .year-tab {\r\n    padding: 3px 6px;\r\n    margin: 0 3px;\r\n    font-size: 12px;\r\n  }\r\n  \r\n  .segment-label {\r\n    font-size: 12px;\r\n  }\r\n  \r\n  .segment-value {\r\n    font-size: 14px;\r\n  }\r\n  \r\n  .pyramid-segment {\r\n    margin-bottom: 5px;\r\n  }\r\n}\r\n</style> "],"mappings":"AAwCA;EACAA,IAAA;EACAC,KAAA;IACA;MACAC,WAAA;MAAA;MACAC,KAAA;MACAC,OAAA;QACA;UAAAC,KAAA;UAAAC,KAAA;UAAAC,MAAA;QAAA;QACA;UAAAF,KAAA;UAAAC,KAAA;UAAAC,MAAA;QAAA;QACA;UAAAF,KAAA;UAAAC,KAAA;UAAAC,MAAA;QAAA;QACA;UAAAF,KAAA;UAAAC,KAAA;UAAAC,MAAA;QAAA;MACA;IACA;EACA;EACAC,OAAA;IACAC,gBAAAC,IAAA,EAAAC,IAAA;MACA;MACA,MAAAV,IAAA,QAAAG,OAAA,CAAAM,IAAA;MACA,IAAAE,YAAA;MACA,IAAAC,OAAA;MAEA,QAAAF,IAAA;QACA;UACAC,YAAA;UACAC,OAAA;UACA;QACA;UACA;UACAD,YAAA,IAAAX,IAAA,CAAAK,KAAA,GAAAL,IAAA,CAAAM,MAAA,KAAAN,IAAA,CAAAI,KAAA,GAAAJ,IAAA,CAAAK,KAAA,GAAAL,IAAA,CAAAM,MAAA;UACAM,OAAA;UACA;QACA;UACA;UACAD,YAAA,GAAAX,IAAA,CAAAM,MAAA,IAAAN,IAAA,CAAAI,KAAA,GAAAJ,IAAA,CAAAK,KAAA,GAAAL,IAAA,CAAAM,MAAA;UACAM,OAAA;UACA;MACA;;MAEA;MACA;QACAC,KAAA,KAAAF,YAAA;QACAG,eAAA,EAAAF;MACA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}