{"ast":null,"code":"import \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.map.js\";\nimport * as echarts from 'echarts';\nexport default {\n  name: 'GrainVillage',\n  data() {\n    return {\n      chart: null,\n      villageData: [{\n        name: '龙泉村',\n        value: 5358.2\n      }, {\n        name: '梅子村',\n        value: 5297.1\n      }, {\n        name: '高庙村',\n        value: 4853.2\n      }, {\n        name: '骑龙村',\n        value: 4722.1\n      }, {\n        name: '平等村',\n        value: 4469.2\n      }, {\n        name: '同心村',\n        value: 4457.2\n      }, {\n        name: '人和村',\n        value: 4269.2\n      }, {\n        name: '五星村',\n        value: 4039.6\n      }, {\n        name: '长岭村',\n        value: 3935.1\n      }, {\n        name: '三塘村',\n        value: 3884.2\n      }, {\n        name: '双山村',\n        value: 3774.2\n      }, {\n        name: '古松村',\n        value: 3696.2\n      }, {\n        name: '永胜村',\n        value: 3459.1\n      }, {\n        name: '团结村',\n        value: 3442.2\n      }, {\n        name: '建新村',\n        value: 3357.1\n      }, {\n        name: '翻身村',\n        value: 3257.6\n      }, {\n        name: '狮子村',\n        value: 2849.1\n      }, {\n        name: '银盆村',\n        value: 2532.1\n      }, {\n        name: '龙台村',\n        value: 2481.1\n      }, {\n        name: '安平村',\n        value: 2309.1\n      }, {\n        name: '垮山村',\n        value: 2240.1\n      }]\n    };\n  },\n  mounted() {\n    this.initChart();\n    window.addEventListener('resize', this.resizeChart);\n  },\n  beforeUnmount() {\n    window.removeEventListener('resize', this.resizeChart);\n    if (this.chart) {\n      this.chart.dispose();\n      this.chart = null;\n    }\n  },\n  methods: {\n    initChart() {\n      this.chart = echarts.init(this.$refs.chartRef);\n      this.updateChart();\n    },\n    updateChart() {\n      if (!this.chart) return;\n\n      // 对数据进行排序（从大到小）\n      const sortedData = [...this.villageData].sort((a, b) => b.value - a.value);\n\n      // 提取村名和数值为单独数组\n      const villageNames = sortedData.map(item => item.name);\n      const villageValues = sortedData.map(item => item.value);\n\n      // 计算图表需要的高度 - 每个村庄分配足够的高度\n      const barHeight = 30; // 每个条形的高度\n      const totalHeight = villageNames.length * barHeight;\n      this.$refs.chartRef.style.height = totalHeight + 'px';\n      const option = {\n        tooltip: {\n          trigger: 'axis',\n          axisPointer: {\n            type: 'shadow'\n          },\n          formatter: '{b}: {c} 亩'\n        },\n        grid: {\n          left: '3%',\n          right: '15%',\n          // 增加右侧空间，为标签留出足够位置\n          bottom: '3%',\n          top: '1%',\n          containLabel: true\n        },\n        xAxis: {\n          type: 'value',\n          axisLabel: {\n            color: '#fff',\n            fontSize: 10\n          },\n          axisLine: {\n            lineStyle: {\n              color: 'rgba(255, 255, 255, 0.3)'\n            }\n          },\n          splitLine: {\n            lineStyle: {\n              color: 'rgba(255, 255, 255, 0.1)'\n            }\n          }\n        },\n        yAxis: {\n          type: 'category',\n          data: villageNames,\n          axisLabel: {\n            color: '#fff',\n            fontSize: 12,\n            interval: 0,\n            width: 70,\n            overflow: 'truncate'\n          },\n          axisLine: {\n            lineStyle: {\n              color: 'rgba(255, 255, 255, 0.3)'\n            }\n          }\n        },\n        series: [{\n          name: '播种面积',\n          type: 'bar',\n          barWidth: '60%',\n          data: villageValues,\n          itemStyle: {\n            color: new echarts.graphic.LinearGradient(0, 0, 1, 0, [{\n              offset: 0,\n              color: '#4cd5ce'\n            }, {\n              offset: 1,\n              color: '#16a6b5'\n            }])\n          },\n          label: {\n            show: true,\n            position: 'right',\n            formatter: '{c} 亩',\n            fontSize: 12,\n            color: '#fff',\n            fontWeight: 'bold'\n          }\n        }]\n      };\n      this.chart.setOption(option);\n    },\n    resizeChart() {\n      if (this.chart) {\n        this.chart.resize();\n      }\n    }\n  }\n};","map":{"version":3,"names":["echarts","name","data","chart","villageData","value","mounted","initChart","window","addEventListener","resizeChart","beforeUnmount","removeEventListener","dispose","methods","init","$refs","chartRef","updateChart","sortedData","sort","a","b","villageNames","map","item","villageValues","barHeight","totalHeight","length","style","height","option","tooltip","trigger","axisPointer","type","formatter","grid","left","right","bottom","top","containLabel","xAxis","axisLabel","color","fontSize","axisLine","lineStyle","splitLine","yAxis","interval","width","overflow","series","barWidth","itemStyle","graphic","LinearGradient","offset","label","show","position","fontWeight","setOption","resize"],"sources":["src/components/charts/GrainVillage.vue"],"sourcesContent":["<template>\r\n  <div class=\"chart-container\">\r\n    <div class=\"chart-title\">各村2024年粮食播种面积</div>\r\n    <div class=\"chart-scroll-container\">\r\n      <div ref=\"chartRef\" class=\"echarts-container\"></div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport * as echarts from 'echarts'\r\n\r\nexport default {\r\n  name: 'GrainVillage',\r\n  data() {\r\n    return {\r\n      chart: null,\r\n      villageData: [\r\n        { name: '龙泉村', value: 5358.2 },\r\n        { name: '梅子村', value: 5297.1 },\r\n        { name: '高庙村', value: 4853.2 },\r\n        { name: '骑龙村', value: 4722.1 },\r\n        { name: '平等村', value: 4469.2 },\r\n        { name: '同心村', value: 4457.2 },\r\n        { name: '人和村', value: 4269.2 },\r\n        { name: '五星村', value: 4039.6 },\r\n        { name: '长岭村', value: 3935.1 },\r\n        { name: '三塘村', value: 3884.2 },\r\n        { name: '双山村', value: 3774.2 },\r\n        { name: '古松村', value: 3696.2 },\r\n        { name: '永胜村', value: 3459.1 },\r\n        { name: '团结村', value: 3442.2 },\r\n        { name: '建新村', value: 3357.1 },\r\n        { name: '翻身村', value: 3257.6 },\r\n        { name: '狮子村', value: 2849.1 },\r\n        { name: '银盆村', value: 2532.1 },\r\n        { name: '龙台村', value: 2481.1 },\r\n        { name: '安平村', value: 2309.1 },\r\n        { name: '垮山村', value: 2240.1 }\r\n      ]\r\n    }\r\n  },\r\n  mounted() {\r\n    this.initChart()\r\n    window.addEventListener('resize', this.resizeChart)\r\n  },\r\n  beforeUnmount() {\r\n    window.removeEventListener('resize', this.resizeChart)\r\n    if (this.chart) {\r\n      this.chart.dispose()\r\n      this.chart = null\r\n    }\r\n  },\r\n  methods: {\r\n    initChart() {\r\n      this.chart = echarts.init(this.$refs.chartRef)\r\n      this.updateChart()\r\n    },\r\n    \r\n    updateChart() {\r\n      if (!this.chart) return\r\n      \r\n      // 对数据进行排序（从大到小）\r\n      const sortedData = [...this.villageData].sort((a, b) => b.value - a.value)\r\n      \r\n      // 提取村名和数值为单独数组\r\n      const villageNames = sortedData.map(item => item.name)\r\n      const villageValues = sortedData.map(item => item.value)\r\n      \r\n      // 计算图表需要的高度 - 每个村庄分配足够的高度\r\n      const barHeight = 30 // 每个条形的高度\r\n      const totalHeight = villageNames.length * barHeight\r\n      this.$refs.chartRef.style.height = totalHeight + 'px'\r\n      \r\n      const option = {\r\n        tooltip: {\r\n          trigger: 'axis',\r\n          axisPointer: {\r\n            type: 'shadow'\r\n          },\r\n          formatter: '{b}: {c} 亩'\r\n        },\r\n        grid: {\r\n          left: '3%',\r\n          right: '15%', // 增加右侧空间，为标签留出足够位置\r\n          bottom: '3%',\r\n          top: '1%',\r\n          containLabel: true\r\n        },\r\n        xAxis: {\r\n          type: 'value',\r\n          axisLabel: {\r\n            color: '#fff',\r\n            fontSize: 10\r\n          },\r\n          axisLine: {\r\n            lineStyle: {\r\n              color: 'rgba(255, 255, 255, 0.3)'\r\n            }\r\n          },\r\n          splitLine: {\r\n            lineStyle: {\r\n              color: 'rgba(255, 255, 255, 0.1)'\r\n            }\r\n          }\r\n        },\r\n        yAxis: {\r\n          type: 'category',\r\n          data: villageNames,\r\n          axisLabel: {\r\n            color: '#fff',\r\n            fontSize: 12,\r\n            interval: 0,\r\n            width: 70,\r\n            overflow: 'truncate'\r\n          },\r\n          axisLine: {\r\n            lineStyle: {\r\n              color: 'rgba(255, 255, 255, 0.3)'\r\n            }\r\n          }\r\n        },\r\n        series: [\r\n          {\r\n            name: '播种面积',\r\n            type: 'bar',\r\n            barWidth: '60%',\r\n            data: villageValues,\r\n            itemStyle: {\r\n              color: new echarts.graphic.LinearGradient(0, 0, 1, 0, [\r\n                { offset: 0, color: '#4cd5ce' },\r\n                { offset: 1, color: '#16a6b5' }\r\n              ])\r\n            },\r\n            label: {\r\n              show: true,\r\n              position: 'right',\r\n              formatter: '{c} 亩',\r\n              fontSize: 12,\r\n              color: '#fff',\r\n              fontWeight: 'bold'\r\n            }\r\n          }\r\n        ]\r\n      }\r\n      \r\n      this.chart.setOption(option)\r\n    },\r\n    \r\n    resizeChart() {\r\n      if (this.chart) {\r\n        this.chart.resize()\r\n      }\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.chart-container {\r\n  width: 100%;\r\n  height: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  padding: 5px 5px 0 5px;\r\n  box-sizing: border-box;\r\n}\r\n\r\n.chart-title {\r\n  text-align: center;\r\n  color: #fff;\r\n  font-size: 16px;\r\n  font-weight: bold;\r\n  margin: 5px 0 10px 0;\r\n}\r\n\r\n.chart-scroll-container {\r\n  width: 100%;\r\n  flex: 1;\r\n  position: relative;\r\n  overflow-y: auto;\r\n  /* 添加滚动条样式 */\r\n  scrollbar-width: thin;\r\n  scrollbar-color: rgba(76, 213, 206, 0.5) rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n/* 自定义滚动条样式 */\r\n.chart-scroll-container::-webkit-scrollbar {\r\n  width: 6px;\r\n}\r\n\r\n.chart-scroll-container::-webkit-scrollbar-track {\r\n  background: rgba(0, 0, 0, 0.1);\r\n  border-radius: 3px;\r\n}\r\n\r\n.chart-scroll-container::-webkit-scrollbar-thumb {\r\n  background-color: rgba(76, 213, 206, 0.5);\r\n  border-radius: 3px;\r\n}\r\n\r\n.echarts-container {\r\n  width: 100%;\r\n  min-height: 100%;\r\n}\r\n\r\n@media screen and (max-width: 768px) {\r\n  .chart-title {\r\n    font-size: 15px;\r\n    margin: 5px 0 8px 0;\r\n  }\r\n}\r\n\r\n@media screen and (max-width: 480px) {\r\n  .chart-title {\r\n    font-size: 14px;\r\n    margin: 3px 0 6px 0;\r\n  }\r\n}\r\n</style> "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}