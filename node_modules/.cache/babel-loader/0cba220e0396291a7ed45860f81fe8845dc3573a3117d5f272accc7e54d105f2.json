{"ast":null,"code":"export default {\n  name: 'EconomicCropsTrend',\n  data() {\n    return {\n      chart: null,\n      loading: true,\n      cropData: {\n        years: ['2021', '2022', '2023', '2024'],\n        totalArea: [47964, 16822, 51646, 51524.5]\n      }\n    };\n  },\n  mounted() {\n    // 模拟加载延迟\n    setTimeout(() => {\n      this.loading = false;\n      this.$nextTick(() => {\n        this.initChart();\n      });\n    }, 300); // 减少延迟时间\n\n    window.addEventListener('resize', this.handleResize);\n  },\n  beforeDestroy() {\n    window.removeEventListener('resize', this.handleResize);\n    if (this.chart) {\n      this.chart.dispose();\n      this.chart = null;\n    }\n  },\n  methods: {\n    initChart() {\n      this.chart = this.$echarts.init(this.$refs.chart);\n      const option = {\n        title: {\n          text: '全镇2021-2024年经济作物总播种面积',\n          textStyle: {\n            color: '#fff',\n            fontSize: 14\n          },\n          left: 'center',\n          top: 5 // 调整标题位置\n        },\n        tooltip: {\n          trigger: 'axis',\n          formatter: '{b}年<br/>总播种面积: {c} 亩',\n          backgroundColor: 'rgba(0, 0, 0, 0.7)',\n          borderColor: 'rgba(255, 255, 255, 0.2)',\n          textStyle: {\n            color: '#fff'\n          }\n        },\n        grid: {\n          left: '3%',\n          right: '4%',\n          bottom: '8%',\n          top: '15%',\n          // 增加上边距，为标题腾出空间\n          containLabel: true\n        },\n        xAxis: {\n          type: 'category',\n          boundaryGap: false,\n          data: this.cropData.years,\n          axisLine: {\n            lineStyle: {\n              color: 'rgba(255, 255, 255, 0.3)'\n            }\n          },\n          axisLabel: {\n            color: 'rgba(255, 255, 255, 0.7)'\n          }\n        },\n        yAxis: {\n          type: 'value',\n          name: '亩',\n          nameTextStyle: {\n            color: 'rgba(255, 255, 255, 0.7)'\n          },\n          splitLine: {\n            lineStyle: {\n              color: 'rgba(255, 255, 255, 0.1)'\n            }\n          },\n          axisLine: {\n            lineStyle: {\n              color: 'rgba(255, 255, 255, 0.3)'\n            }\n          },\n          axisLabel: {\n            color: 'rgba(255, 255, 255, 0.7)'\n          }\n        },\n        series: [{\n          name: '总播种面积',\n          type: 'line',\n          data: this.cropData.totalArea,\n          smooth: true,\n          symbol: 'circle',\n          symbolSize: 8,\n          lineStyle: {\n            width: 3,\n            color: '#4cd5ce'\n          },\n          itemStyle: {\n            color: '#4cd5ce'\n          },\n          areaStyle: {\n            color: new this.$echarts.graphic.LinearGradient(0, 0, 0, 1, [{\n              offset: 0,\n              color: 'rgba(76, 213, 206, 0.8)'\n            }, {\n              offset: 1,\n              color: 'rgba(76, 213, 206, 0.1)'\n            }])\n          },\n          emphasis: {\n            itemStyle: {\n              borderWidth: 3,\n              borderColor: 'rgba(255, 255, 255, 0.8)',\n              color: '#43aa8b'\n            }\n          }\n        }],\n        animationDuration: 1000 // 减少动画时间\n      };\n      this.chart.setOption(option);\n    },\n    handleResize() {\n      if (this.chart) {\n        this.chart.resize();\n      }\n    }\n  }\n};","map":{"version":3,"names":["name","data","chart","loading","cropData","years","totalArea","mounted","setTimeout","$nextTick","initChart","window","addEventListener","handleResize","beforeDestroy","removeEventListener","dispose","methods","$echarts","init","$refs","option","title","text","textStyle","color","fontSize","left","top","tooltip","trigger","formatter","backgroundColor","borderColor","grid","right","bottom","containLabel","xAxis","type","boundaryGap","axisLine","lineStyle","axisLabel","yAxis","nameTextStyle","splitLine","series","smooth","symbol","symbolSize","width","itemStyle","areaStyle","graphic","LinearGradient","offset","emphasis","borderWidth","animationDuration","setOption","resize"],"sources":["src/components/charts/EconomicCropsTrend.vue"],"sourcesContent":["<template>\r\n  <div class=\"chart-wrapper\">\r\n    <div class=\"chart-loading\" v-if=\"loading\">\r\n      <div class=\"loading-spinner\"></div>\r\n      <div>加载中...</div>\r\n    </div>\r\n    <div ref=\"chart\" class=\"chart\" :class=\"{ 'is-loading': loading }\"></div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: 'EconomicCropsTrend',\r\n  data() {\r\n    return {\r\n      chart: null,\r\n      loading: true,\r\n      cropData: {\r\n        years: ['2021', '2022', '2023', '2024'],\r\n        totalArea: [47964, 16822, 51646, 51524.5]\r\n      }\r\n    }\r\n  },\r\n  mounted() {\r\n    // 模拟加载延迟\r\n    setTimeout(() => {\r\n      this.loading = false\r\n      this.$nextTick(() => {\r\n        this.initChart()\r\n      })\r\n    }, 300) // 减少延迟时间\r\n    \r\n    window.addEventListener('resize', this.handleResize)\r\n  },\r\n  beforeDestroy() {\r\n    window.removeEventListener('resize', this.handleResize)\r\n    if (this.chart) {\r\n      this.chart.dispose()\r\n      this.chart = null\r\n    }\r\n  },\r\n  methods: {\r\n    initChart() {\r\n      this.chart = this.$echarts.init(this.$refs.chart)\r\n      const option = {\r\n        title: {\r\n          text: '全镇2021-2024年经济作物总播种面积',\r\n          textStyle: {\r\n            color: '#fff',\r\n            fontSize: 14\r\n          },\r\n          left: 'center',\r\n          top: 5 // 调整标题位置\r\n        },\r\n        tooltip: {\r\n          trigger: 'axis',\r\n          formatter: '{b}年<br/>总播种面积: {c} 亩',\r\n          backgroundColor: 'rgba(0, 0, 0, 0.7)',\r\n          borderColor: 'rgba(255, 255, 255, 0.2)',\r\n          textStyle: {\r\n            color: '#fff'\r\n          }\r\n        },\r\n        grid: {\r\n          left: '3%',\r\n          right: '4%',\r\n          bottom: '8%',\r\n          top: '15%', // 增加上边距，为标题腾出空间\r\n          containLabel: true\r\n        },\r\n        xAxis: {\r\n          type: 'category',\r\n          boundaryGap: false,\r\n          data: this.cropData.years,\r\n          axisLine: {\r\n            lineStyle: {\r\n              color: 'rgba(255, 255, 255, 0.3)'\r\n            }\r\n          },\r\n          axisLabel: {\r\n            color: 'rgba(255, 255, 255, 0.7)'\r\n          }\r\n        },\r\n        yAxis: {\r\n          type: 'value',\r\n          name: '亩',\r\n          nameTextStyle: {\r\n            color: 'rgba(255, 255, 255, 0.7)'\r\n          },\r\n          splitLine: {\r\n            lineStyle: {\r\n              color: 'rgba(255, 255, 255, 0.1)'\r\n            }\r\n          },\r\n          axisLine: {\r\n            lineStyle: {\r\n              color: 'rgba(255, 255, 255, 0.3)'\r\n            }\r\n          },\r\n          axisLabel: {\r\n            color: 'rgba(255, 255, 255, 0.7)'\r\n          }\r\n        },\r\n        series: [\r\n          {\r\n            name: '总播种面积',\r\n            type: 'line',\r\n            data: this.cropData.totalArea,\r\n            smooth: true,\r\n            symbol: 'circle',\r\n            symbolSize: 8,\r\n            lineStyle: {\r\n              width: 3,\r\n              color: '#4cd5ce'\r\n            },\r\n            itemStyle: {\r\n              color: '#4cd5ce'\r\n            },\r\n            areaStyle: {\r\n              color: new this.$echarts.graphic.LinearGradient(0, 0, 0, 1, [\r\n                { offset: 0, color: 'rgba(76, 213, 206, 0.8)' },\r\n                { offset: 1, color: 'rgba(76, 213, 206, 0.1)' }\r\n              ])\r\n            },\r\n            emphasis: {\r\n              itemStyle: {\r\n                borderWidth: 3,\r\n                borderColor: 'rgba(255, 255, 255, 0.8)',\r\n                color: '#43aa8b'\r\n              }\r\n            }\r\n          }\r\n        ],\r\n        animationDuration: 1000 // 减少动画时间\r\n      }\r\n      \r\n      this.chart.setOption(option)\r\n    },\r\n    handleResize() {\r\n      if (this.chart) {\r\n        this.chart.resize()\r\n      }\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.chart-wrapper {\r\n  width: 100%;\r\n  height: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  position: relative;\r\n}\r\n\r\n.chart {\r\n  flex: 1;\r\n  transition: opacity 0.3s ease;\r\n}\r\n\r\n.chart.is-loading {\r\n  opacity: 0;\r\n}\r\n\r\n.chart-loading {\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  background: rgba(0, 0, 0, 0.2);\r\n  color: rgba(255, 255, 255, 0.7);\r\n  font-size: 14px;\r\n  z-index: 10;\r\n}\r\n\r\n.loading-spinner {\r\n  width: 30px;\r\n  height: 30px;\r\n  border: 3px solid rgba(76, 213, 206, 0.3);\r\n  border-radius: 50%;\r\n  border-top-color: #4cd5ce;\r\n  animation: spin 1s ease-in-out infinite;\r\n  margin-bottom: 10px;\r\n}\r\n\r\n@keyframes spin {\r\n  to { transform: rotate(360deg); }\r\n}\r\n</style> "],"mappings":"AAWA;EACAA,IAAA;EACAC,KAAA;IACA;MACAC,KAAA;MACAC,OAAA;MACAC,QAAA;QACAC,KAAA;QACAC,SAAA;MACA;IACA;EACA;EACAC,QAAA;IACA;IACAC,UAAA;MACA,KAAAL,OAAA;MACA,KAAAM,SAAA;QACA,KAAAC,SAAA;MACA;IACA;;IAEAC,MAAA,CAAAC,gBAAA,gBAAAC,YAAA;EACA;EACAC,cAAA;IACAH,MAAA,CAAAI,mBAAA,gBAAAF,YAAA;IACA,SAAAX,KAAA;MACA,KAAAA,KAAA,CAAAc,OAAA;MACA,KAAAd,KAAA;IACA;EACA;EACAe,OAAA;IACAP,UAAA;MACA,KAAAR,KAAA,QAAAgB,QAAA,CAAAC,IAAA,MAAAC,KAAA,CAAAlB,KAAA;MACA,MAAAmB,MAAA;QACAC,KAAA;UACAC,IAAA;UACAC,SAAA;YACAC,KAAA;YACAC,QAAA;UACA;UACAC,IAAA;UACAC,GAAA;QACA;QACAC,OAAA;UACAC,OAAA;UACAC,SAAA;UACAC,eAAA;UACAC,WAAA;UACAT,SAAA;YACAC,KAAA;UACA;QACA;QACAS,IAAA;UACAP,IAAA;UACAQ,KAAA;UACAC,MAAA;UACAR,GAAA;UAAA;UACAS,YAAA;QACA;QACAC,KAAA;UACAC,IAAA;UACAC,WAAA;UACAvC,IAAA,OAAAG,QAAA,CAAAC,KAAA;UACAoC,QAAA;YACAC,SAAA;cACAjB,KAAA;YACA;UACA;UACAkB,SAAA;YACAlB,KAAA;UACA;QACA;QACAmB,KAAA;UACAL,IAAA;UACAvC,IAAA;UACA6C,aAAA;YACApB,KAAA;UACA;UACAqB,SAAA;YACAJ,SAAA;cACAjB,KAAA;YACA;UACA;UACAgB,QAAA;YACAC,SAAA;cACAjB,KAAA;YACA;UACA;UACAkB,SAAA;YACAlB,KAAA;UACA;QACA;QACAsB,MAAA,GACA;UACA/C,IAAA;UACAuC,IAAA;UACAtC,IAAA,OAAAG,QAAA,CAAAE,SAAA;UACA0C,MAAA;UACAC,MAAA;UACAC,UAAA;UACAR,SAAA;YACAS,KAAA;YACA1B,KAAA;UACA;UACA2B,SAAA;YACA3B,KAAA;UACA;UACA4B,SAAA;YACA5B,KAAA,WAAAP,QAAA,CAAAoC,OAAA,CAAAC,cAAA,cACA;cAAAC,MAAA;cAAA/B,KAAA;YAAA,GACA;cAAA+B,MAAA;cAAA/B,KAAA;YAAA,EACA;UACA;UACAgC,QAAA;YACAL,SAAA;cACAM,WAAA;cACAzB,WAAA;cACAR,KAAA;YACA;UACA;QACA,EACA;QACAkC,iBAAA;MACA;MAEA,KAAAzD,KAAA,CAAA0D,SAAA,CAAAvC,MAAA;IACA;IACAR,aAAA;MACA,SAAAX,KAAA;QACA,KAAAA,KAAA,CAAA2D,MAAA;MACA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}