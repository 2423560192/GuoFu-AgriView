{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.for-each.js\";\nimport \"core-js/modules/es.set.difference.v2.js\";\nimport \"core-js/modules/es.set.intersection.v2.js\";\nimport \"core-js/modules/es.set.is-disjoint-from.v2.js\";\nimport \"core-js/modules/es.set.is-subset-of.v2.js\";\nimport \"core-js/modules/es.set.is-superset-of.v2.js\";\nimport \"core-js/modules/es.set.symmetric-difference.v2.js\";\nimport \"core-js/modules/es.set.union.v2.js\";\nexport default {\n  name: 'FertilizerSankey',\n  data() {\n    return {\n      chart: null,\n      fertilizerData: [\n      // 2021年数据\n      {\n        source: '2021年',\n        target: '氮肥',\n        value: 1006.98\n      }, {\n        source: '2021年',\n        target: '磷肥',\n        value: 591.99\n      }, {\n        source: '2021年',\n        target: '钾肥',\n        value: 158.00\n      }, {\n        source: '2021年',\n        target: '复合肥',\n        value: 620.84\n      },\n      // 2022年数据\n      {\n        source: '2022年',\n        target: '氮肥',\n        value: 2508.65\n      }, {\n        source: '2022年',\n        target: '磷肥',\n        value: 5608.58\n      }, {\n        source: '2022年',\n        target: '钾肥',\n        value: 301.95\n      }, {\n        source: '2022年',\n        target: '复合肥',\n        value: 1755.43\n      },\n      // 2023年数据\n      {\n        source: '2023年',\n        target: '氮肥',\n        value: 2500.03\n      }, {\n        source: '2023年',\n        target: '磷肥',\n        value: 3670.31\n      }, {\n        source: '2023年',\n        target: '钾肥',\n        value: 285.05\n      }, {\n        source: '2023年',\n        target: '复合肥',\n        value: 1505.02\n      },\n      // 2024年数据\n      {\n        source: '2024年',\n        target: '氮肥',\n        value: 2498.20\n      }, {\n        source: '2024年',\n        target: '磷肥',\n        value: 3676.38\n      }, {\n        source: '2024年',\n        target: '钾肥',\n        value: 285.80\n      }, {\n        source: '2024年',\n        target: '复合肥',\n        value: 1515.63\n      }],\n      colors: {\n        '2021年': '#276678',\n        '2022年': '#1687a7',\n        '2023年': '#00a8cc',\n        '2024年': '#4cd5ce',\n        '氮肥': '#4cd5ce',\n        '磷肥': '#43aa8b',\n        '钾肥': '#f9c74f',\n        '复合肥': '#f94144'\n      },\n      // 年份按从上到下的顺序\n      yearOrder: ['2024年', '2023年', '2022年', '2021年'],\n      fertilizerOrder: ['氮肥', '磷肥', '钾肥', '复合肥']\n    };\n  },\n  mounted() {\n    this.initChart();\n    window.addEventListener('resize', this.handleResize);\n  },\n  beforeDestroy() {\n    if (this.chart) {\n      this.chart.dispose();\n      this.chart = null;\n    }\n    window.removeEventListener('resize', this.handleResize);\n  },\n  methods: {\n    initChart() {\n      this.chart = this.$echarts.init(this.$refs.chart);\n      this.updateChart();\n    },\n    handleResize() {\n      if (this.chart) {\n        this.chart.resize();\n      }\n    },\n    updateChart() {\n      // 从links数据中提取所有唯一节点名称\n      const nodeNames = new Set();\n      this.fertilizerData.forEach(link => {\n        nodeNames.add(link.source);\n        nodeNames.add(link.target);\n      });\n\n      // 转换为nodes数组，并手动设置年份节点的位置\n      const nodes = [];\n\n      // 添加年份节点，指定位置\n      this.yearOrder.forEach((year, index) => {\n        nodes.push({\n          name: year,\n          itemStyle: {\n            color: this.colors[year]\n          },\n          // 固定节点的坐标 - 左侧垂直排列\n          // x坐标设为0（最左侧），y坐标按比例分布\n          x: 0,\n          y: index * (1 / (this.yearOrder.length - 1)),\n          fixed: true\n        });\n      });\n\n      // 添加肥料类型节点\n      this.fertilizerOrder.forEach(fertilizer => {\n        nodes.push({\n          name: fertilizer,\n          itemStyle: {\n            color: this.colors[fertilizer]\n          }\n        });\n      });\n      const option = {\n        title: {\n          show: false\n        },\n        tooltip: {\n          trigger: 'item',\n          triggerOn: 'mousemove',\n          formatter: params => {\n            if (params.dataType === 'edge') {\n              return `${params.data.source} → ${params.data.target}: ${params.value.toFixed(2)} 吨`;\n            }\n            return params.name;\n          }\n        },\n        series: [{\n          type: 'sankey',\n          left: '5%',\n          right: '20%',\n          top: '5%',\n          bottom: '5%',\n          data: nodes,\n          links: this.fertilizerData,\n          nodeAlign: 'justify',\n          orient: 'horizontal',\n          draggable: false,\n          layoutIterations: 0,\n          // 禁用自动布局迭代，使用固定位置\n          label: {\n            position: 'right',\n            color: '#fff',\n            fontSize: 12\n          },\n          lineStyle: {\n            color: 'gradient',\n            curveness: 0.5,\n            opacity: 0.6\n          },\n          itemStyle: {\n            borderWidth: 1,\n            borderColor: '#333'\n          },\n          emphasis: {\n            focus: 'adjacency',\n            lineStyle: {\n              opacity: 0.9\n            }\n          }\n        }]\n      };\n      this.chart.setOption(option);\n    }\n  }\n};","map":{"version":3,"names":["name","data","chart","fertilizerData","source","target","value","colors","yearOrder","fertilizerOrder","mounted","initChart","window","addEventListener","handleResize","beforeDestroy","dispose","removeEventListener","methods","$echarts","init","$refs","updateChart","resize","nodeNames","Set","forEach","link","add","nodes","year","index","push","itemStyle","color","x","y","length","fixed","fertilizer","option","title","show","tooltip","trigger","triggerOn","formatter","params","dataType","toFixed","series","type","left","right","top","bottom","links","nodeAlign","orient","draggable","layoutIterations","label","position","fontSize","lineStyle","curveness","opacity","borderWidth","borderColor","emphasis","focus","setOption"],"sources":["src/components/charts/FertilizerSankey.vue"],"sourcesContent":["<template>\r\n  <div class=\"chart-wrapper\">\r\n    <div class=\"chart-title\">各年各类化肥使用量流向图</div>\r\n    <div ref=\"chart\" class=\"chart-container\"></div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: 'FertilizerSankey',\r\n  data() {\r\n    return {\r\n      chart: null,\r\n      fertilizerData: [\r\n        // 2021年数据\r\n        { source: '2021年', target: '氮肥', value: 1006.98 },\r\n        { source: '2021年', target: '磷肥', value: 591.99 },\r\n        { source: '2021年', target: '钾肥', value: 158.00 },\r\n        { source: '2021年', target: '复合肥', value: 620.84 },\r\n        \r\n        // 2022年数据\r\n        { source: '2022年', target: '氮肥', value: 2508.65 },\r\n        { source: '2022年', target: '磷肥', value: 5608.58 },\r\n        { source: '2022年', target: '钾肥', value: 301.95 },\r\n        { source: '2022年', target: '复合肥', value: 1755.43 },\r\n        \r\n        // 2023年数据\r\n        { source: '2023年', target: '氮肥', value: 2500.03 },\r\n        { source: '2023年', target: '磷肥', value: 3670.31 },\r\n        { source: '2023年', target: '钾肥', value: 285.05 },\r\n        { source: '2023年', target: '复合肥', value: 1505.02 },\r\n        \r\n        // 2024年数据\r\n        { source: '2024年', target: '氮肥', value: 2498.20 },\r\n        { source: '2024年', target: '磷肥', value: 3676.38 },\r\n        { source: '2024年', target: '钾肥', value: 285.80 },\r\n        { source: '2024年', target: '复合肥', value: 1515.63 }\r\n      ],\r\n      colors: {\r\n        '2021年': '#276678',\r\n        '2022年': '#1687a7',\r\n        '2023年': '#00a8cc',\r\n        '2024年': '#4cd5ce',\r\n        '氮肥': '#4cd5ce',\r\n        '磷肥': '#43aa8b',\r\n        '钾肥': '#f9c74f',\r\n        '复合肥': '#f94144'\r\n      },\r\n      // 年份按从上到下的顺序\r\n      yearOrder: ['2024年', '2023年', '2022年', '2021年'],\r\n      fertilizerOrder: ['氮肥', '磷肥', '钾肥', '复合肥']\r\n    };\r\n  },\r\n  mounted() {\r\n    this.initChart();\r\n    window.addEventListener('resize', this.handleResize);\r\n  },\r\n  beforeDestroy() {\r\n    if (this.chart) {\r\n      this.chart.dispose();\r\n      this.chart = null;\r\n    }\r\n    window.removeEventListener('resize', this.handleResize);\r\n  },\r\n  methods: {\r\n    initChart() {\r\n      this.chart = this.$echarts.init(this.$refs.chart);\r\n      this.updateChart();\r\n    },\r\n    handleResize() {\r\n      if (this.chart) {\r\n        this.chart.resize();\r\n      }\r\n    },\r\n    updateChart() {\r\n      // 从links数据中提取所有唯一节点名称\r\n      const nodeNames = new Set();\r\n      this.fertilizerData.forEach(link => {\r\n        nodeNames.add(link.source);\r\n        nodeNames.add(link.target);\r\n      });\r\n      \r\n      // 转换为nodes数组，并手动设置年份节点的位置\r\n      const nodes = [];\r\n      \r\n      // 添加年份节点，指定位置\r\n      this.yearOrder.forEach((year, index) => {\r\n        nodes.push({\r\n          name: year,\r\n          itemStyle: {\r\n            color: this.colors[year]\r\n          },\r\n          // 固定节点的坐标 - 左侧垂直排列\r\n          // x坐标设为0（最左侧），y坐标按比例分布\r\n          x: 0,\r\n          y: index * (1 / (this.yearOrder.length - 1)),\r\n          fixed: true\r\n        });\r\n      });\r\n      \r\n      // 添加肥料类型节点\r\n      this.fertilizerOrder.forEach(fertilizer => {\r\n        nodes.push({\r\n          name: fertilizer,\r\n          itemStyle: {\r\n            color: this.colors[fertilizer]\r\n          }\r\n        });\r\n      });\r\n      \r\n      const option = {\r\n        title: {\r\n          show: false\r\n        },\r\n        tooltip: {\r\n          trigger: 'item',\r\n          triggerOn: 'mousemove',\r\n          formatter: params => {\r\n            if (params.dataType === 'edge') {\r\n              return `${params.data.source} → ${params.data.target}: ${params.value.toFixed(2)} 吨`;\r\n            }\r\n            return params.name;\r\n          }\r\n        },\r\n        series: [{\r\n          type: 'sankey',\r\n          left: '5%',\r\n          right: '20%',\r\n          top: '5%',\r\n          bottom: '5%',\r\n          data: nodes,\r\n          links: this.fertilizerData,\r\n          nodeAlign: 'justify',\r\n          orient: 'horizontal',\r\n          draggable: false,\r\n          layoutIterations: 0, // 禁用自动布局迭代，使用固定位置\r\n          label: {\r\n            position: 'right',\r\n            color: '#fff',\r\n            fontSize: 12\r\n          },\r\n          lineStyle: {\r\n            color: 'gradient',\r\n            curveness: 0.5,\r\n            opacity: 0.6\r\n          },\r\n          itemStyle: {\r\n            borderWidth: 1,\r\n            borderColor: '#333'\r\n          },\r\n          emphasis: {\r\n            focus: 'adjacency',\r\n            lineStyle: {\r\n              opacity: 0.9\r\n            }\r\n          }\r\n        }]\r\n      };\r\n      \r\n      this.chart.setOption(option);\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.chart-wrapper {\r\n  width: 100%;\r\n  height: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  padding: 0.5px;\r\n  box-sizing: border-box;\r\n}\r\n\r\n.chart-title {\r\n  font-size: 14px;\r\n  color: #fff;\r\n  text-align: center;\r\n  margin-bottom: 5px;\r\n  flex-shrink: 0;\r\n}\r\n\r\n.chart-container {\r\n  flex: 1;\r\n  width: 100%;\r\n}\r\n\r\n@media screen and (max-width: 480px) {\r\n  .chart-title {\r\n    font-size: 12px;\r\n  }\r\n}\r\n</style> "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}