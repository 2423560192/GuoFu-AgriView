{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nexport default {\n  name: 'FertilizerSankey',\n  data() {\n    return {\n      chart: null,\n      fertilizerData: {\n        '2021': {\n          '氮肥': 1006.98,\n          '磷肥': 591.99,\n          '钾肥': 158.00,\n          '复合肥': 620.84\n        },\n        '2022': {\n          '氮肥': 2508.65,\n          '磷肥': 5608.58,\n          '钾肥': 301.95,\n          '复合肥': 1755.43\n        },\n        '2023': {\n          '氮肥': 2500.03,\n          '磷肥': 3670.31,\n          '钾肥': 285.05,\n          '复合肥': 1505.02\n        },\n        '2024': {\n          '氮肥': 2498.20,\n          '磷肥': 3676.38,\n          '钾肥': 285.80,\n          '复合肥': 1515.63\n        }\n      }\n    };\n  },\n  mounted() {\n    this.initChart();\n    window.addEventListener('resize', this.handleResize);\n  },\n  beforeDestroy() {\n    window.removeEventListener('resize', this.handleResize);\n    if (this.chart) {\n      this.chart.dispose();\n      this.chart = null;\n    }\n  },\n  methods: {\n    initChart() {\n      this.chart = this.$echarts.init(this.$refs.chart);\n\n      // 准备桑基图的节点和链接数据\n      const years = ['2021', '2022', '2023', '2024'];\n      const fertilizerTypes = ['氮肥', '磷肥', '钾肥', '复合肥'];\n      let nodes = [];\n      let links = [];\n\n      // 添加年份节点\n      years.forEach(year => {\n        nodes.push({\n          name: year + '年',\n          itemStyle: {\n            color: '#f9c74f'\n          }\n        });\n      });\n\n      // 添加肥料类型节点\n      fertilizerTypes.forEach(type => {\n        nodes.push({\n          name: type,\n          itemStyle: {\n            color: this.getFertilizerColor(type)\n          }\n        });\n      });\n\n      // 添加连接\n      for (let i = 0; i < years.length - 1; i++) {\n        const currentYear = years[i];\n        const nextYear = years[i + 1];\n        fertilizerTypes.forEach(type => {\n          links.push({\n            source: currentYear + '年',\n            target: nextYear + '年',\n            value: this.fertilizerData[currentYear][type],\n            lineStyle: {\n              color: this.getFertilizerColor(type),\n              opacity: 0.3\n            }\n          });\n        });\n      }\n\n      // 从最后一年连接到化肥类型\n      fertilizerTypes.forEach(type => {\n        links.push({\n          source: '2024年',\n          target: type,\n          value: this.fertilizerData['2024'][type],\n          lineStyle: {\n            color: this.getFertilizerColor(type),\n            opacity: 0.7\n          }\n        });\n      });\n      const option = {\n        tooltip: {\n          trigger: 'item',\n          triggerOn: 'mousemove',\n          formatter: params => {\n            if (params.dataType === 'edge') {\n              return `${params.data.source} -> ${params.data.target}: ${params.data.value.toFixed(2)} 吨`;\n            }\n            return params.name;\n          }\n        },\n        series: [{\n          type: 'sankey',\n          left: '5%',\n          right: '5%',\n          top: '10%',\n          bottom: '5%',\n          emphasis: {\n            focus: 'adjacency'\n          },\n          nodeAlign: 'left',\n          layoutIterations: 0,\n          draggable: false,\n          label: {\n            color: '#fff',\n            position: 'right',\n            fontSize: 12\n          },\n          lineStyle: {\n            color: 'gradient',\n            curveness: 0.5\n          },\n          data: nodes,\n          links: links\n        }]\n      };\n      this.chart.setOption(option);\n    },\n    getFertilizerColor(type) {\n      const colorMap = {\n        '氮肥': '#f94144',\n        '磷肥': '#f3722c',\n        '钾肥': '#90be6d',\n        '复合肥': '#43aa8b'\n      };\n      return colorMap[type] || '#f9c74f';\n    },\n    handleResize() {\n      if (this.chart) {\n        this.chart.resize();\n      }\n    }\n  }\n};","map":{"version":3,"names":["name","data","chart","fertilizerData","mounted","initChart","window","addEventListener","handleResize","beforeDestroy","removeEventListener","dispose","methods","$echarts","init","$refs","years","fertilizerTypes","nodes","links","forEach","year","push","itemStyle","color","type","getFertilizerColor","i","length","currentYear","nextYear","source","target","value","lineStyle","opacity","option","tooltip","trigger","triggerOn","formatter","params","dataType","toFixed","series","left","right","top","bottom","emphasis","focus","nodeAlign","layoutIterations","draggable","label","position","fontSize","curveness","setOption","colorMap","resize"],"sources":["src/components/charts/FertilizerSankey.vue"],"sourcesContent":["<template>\r\n  <div class=\"chart-wrapper\">\r\n    <div class=\"chart-title\">2021-2024年各类化肥使用量流向图</div>\r\n    <div ref=\"chart\" class=\"chart-container\"></div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: 'FertilizerSankey',\r\n  data() {\r\n    return {\r\n      chart: null,\r\n      fertilizerData: {\r\n        '2021': {\r\n          '氮肥': 1006.98,\r\n          '磷肥': 591.99,\r\n          '钾肥': 158.00,\r\n          '复合肥': 620.84\r\n        },\r\n        '2022': {\r\n          '氮肥': 2508.65,\r\n          '磷肥': 5608.58,\r\n          '钾肥': 301.95,\r\n          '复合肥': 1755.43\r\n        },\r\n        '2023': {\r\n          '氮肥': 2500.03,\r\n          '磷肥': 3670.31,\r\n          '钾肥': 285.05,\r\n          '复合肥': 1505.02\r\n        },\r\n        '2024': {\r\n          '氮肥': 2498.20,\r\n          '磷肥': 3676.38,\r\n          '钾肥': 285.80,\r\n          '复合肥': 1515.63\r\n        }\r\n      }\r\n    }\r\n  },\r\n  mounted() {\r\n    this.initChart()\r\n    window.addEventListener('resize', this.handleResize)\r\n  },\r\n  beforeDestroy() {\r\n    window.removeEventListener('resize', this.handleResize)\r\n    if (this.chart) {\r\n      this.chart.dispose()\r\n      this.chart = null\r\n    }\r\n  },\r\n  methods: {\r\n    initChart() {\r\n      this.chart = this.$echarts.init(this.$refs.chart)\r\n      \r\n      // 准备桑基图的节点和链接数据\r\n      const years = ['2021', '2022', '2023', '2024']\r\n      const fertilizerTypes = ['氮肥', '磷肥', '钾肥', '复合肥']\r\n      \r\n      let nodes = []\r\n      let links = []\r\n      \r\n      // 添加年份节点\r\n      years.forEach(year => {\r\n        nodes.push({\r\n          name: year + '年',\r\n          itemStyle: {\r\n            color: '#f9c74f'\r\n          }\r\n        })\r\n      })\r\n      \r\n      // 添加肥料类型节点\r\n      fertilizerTypes.forEach(type => {\r\n        nodes.push({\r\n          name: type,\r\n          itemStyle: {\r\n            color: this.getFertilizerColor(type)\r\n          }\r\n        })\r\n      })\r\n      \r\n      // 添加连接\r\n      for (let i = 0; i < years.length - 1; i++) {\r\n        const currentYear = years[i]\r\n        const nextYear = years[i + 1]\r\n        \r\n        fertilizerTypes.forEach(type => {\r\n          links.push({\r\n            source: currentYear + '年',\r\n            target: nextYear + '年',\r\n            value: this.fertilizerData[currentYear][type],\r\n            lineStyle: {\r\n              color: this.getFertilizerColor(type),\r\n              opacity: 0.3\r\n            }\r\n          })\r\n        })\r\n      }\r\n      \r\n      // 从最后一年连接到化肥类型\r\n      fertilizerTypes.forEach(type => {\r\n        links.push({\r\n          source: '2024年',\r\n          target: type,\r\n          value: this.fertilizerData['2024'][type],\r\n          lineStyle: {\r\n            color: this.getFertilizerColor(type),\r\n            opacity: 0.7\r\n          }\r\n        })\r\n      })\r\n      \r\n      const option = {\r\n        tooltip: {\r\n          trigger: 'item',\r\n          triggerOn: 'mousemove',\r\n          formatter: params => {\r\n            if (params.dataType === 'edge') {\r\n              return `${params.data.source} -> ${params.data.target}: ${params.data.value.toFixed(2)} 吨`\r\n            }\r\n            return params.name\r\n          }\r\n        },\r\n        series: [\r\n          {\r\n            type: 'sankey',\r\n            left: '5%',\r\n            right: '5%',\r\n            top: '10%',\r\n            bottom: '5%',\r\n            emphasis: {\r\n              focus: 'adjacency'\r\n            },\r\n            nodeAlign: 'left',\r\n            layoutIterations: 0,\r\n            draggable: false,\r\n            label: {\r\n              color: '#fff',\r\n              position: 'right',\r\n              fontSize: 12\r\n            },\r\n            lineStyle: {\r\n              color: 'gradient',\r\n              curveness: 0.5\r\n            },\r\n            data: nodes,\r\n            links: links\r\n          }\r\n        ]\r\n      }\r\n      \r\n      this.chart.setOption(option)\r\n    },\r\n    getFertilizerColor(type) {\r\n      const colorMap = {\r\n        '氮肥': '#f94144',\r\n        '磷肥': '#f3722c',\r\n        '钾肥': '#90be6d',\r\n        '复合肥': '#43aa8b'\r\n      }\r\n      \r\n      return colorMap[type] || '#f9c74f'\r\n    },\r\n    handleResize() {\r\n      if (this.chart) {\r\n        this.chart.resize()\r\n      }\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.chart-wrapper {\r\n  width: 100%;\r\n  height: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  padding: 5px;\r\n  box-sizing: border-box;\r\n}\r\n\r\n.chart-title {\r\n  font-size: 14px;\r\n  color: #fff;\r\n  text-align: center;\r\n  margin-bottom: 5px;\r\n  flex-shrink: 0;\r\n}\r\n\r\n.chart-container {\r\n  flex: 1;\r\n  width: 100%;\r\n}\r\n\r\n@media screen and (max-width: 480px) {\r\n  .chart-title {\r\n    font-size: 12px;\r\n  }\r\n}\r\n</style> "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}