{"ast":null,"code":"import \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.map.js\";\nimport { agriculturalConditionsData } from '../../data/agricultural-data.js';\nexport default {\n  name: 'FertilizerVillage',\n  data() {\n    return {\n      chart: null\n    };\n  },\n  mounted() {\n    this.initChart();\n    window.addEventListener('resize', this.handleResize);\n  },\n  beforeDestroy() {\n    window.removeEventListener('resize', this.handleResize);\n    if (this.chart) {\n      this.chart.dispose();\n    }\n  },\n  methods: {\n    initChart() {\n      // 对数据进行排序\n      const sortedData = [...agriculturalConditionsData.villageFertilizerUsage2024].sort((a, b) => b.usage - a.usage);\n      this.chart = this.$echarts.init(this.$refs.chart);\n      const option = {\n        title: {\n          text: '2024年各村化肥用量',\n          textStyle: {\n            color: '#fff',\n            fontSize: 14\n          },\n          left: 'center'\n        },\n        tooltip: {\n          trigger: 'axis',\n          axisPointer: {\n            type: 'shadow'\n          }\n        },\n        grid: {\n          left: '3%',\n          right: '4%',\n          bottom: '3%',\n          containLabel: true\n        },\n        xAxis: {\n          type: 'value',\n          name: '用量(吨)',\n          nameTextStyle: {\n            color: '#fff'\n          },\n          axisLine: {\n            lineStyle: {\n              color: '#fff'\n            }\n          },\n          splitLine: {\n            lineStyle: {\n              color: 'rgba(255, 255, 255, 0.1)'\n            }\n          }\n        },\n        yAxis: {\n          type: 'category',\n          data: sortedData.map(item => item.village),\n          axisLine: {\n            lineStyle: {\n              color: '#fff'\n            }\n          },\n          axisTick: {\n            alignWithLabel: true\n          }\n        },\n        series: [{\n          name: '化肥用量',\n          type: 'bar',\n          data: sortedData.map(item => item.usage),\n          itemStyle: {\n            color: new this.$echarts.graphic.LinearGradient(0, 0, 1, 0, [{\n              offset: 0,\n              color: '#f94144'\n            }, {\n              offset: 1,\n              color: '#f3722c'\n            }])\n          }\n        }]\n      };\n      this.chart.setOption(option);\n    },\n    handleResize() {\n      if (this.chart) {\n        this.chart.resize();\n      }\n    }\n  }\n};","map":{"version":3,"names":["agriculturalConditionsData","name","data","chart","mounted","initChart","window","addEventListener","handleResize","beforeDestroy","removeEventListener","dispose","methods","sortedData","villageFertilizerUsage2024","sort","a","b","usage","$echarts","init","$refs","option","title","text","textStyle","color","fontSize","left","tooltip","trigger","axisPointer","type","grid","right","bottom","containLabel","xAxis","nameTextStyle","axisLine","lineStyle","splitLine","yAxis","map","item","village","axisTick","alignWithLabel","series","itemStyle","graphic","LinearGradient","offset","setOption","resize"],"sources":["src/components/charts/FertilizerVillage.vue"],"sourcesContent":["<template>\r\n  <div class=\"chart-wrapper\">\r\n    <div ref=\"chart\" class=\"chart\"></div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { agriculturalConditionsData } from '../../data/agricultural-data.js'\r\n\r\nexport default {\r\n  name: 'FertilizerVillage',\r\n  data() {\r\n    return {\r\n      chart: null\r\n    }\r\n  },\r\n  mounted() {\r\n    this.initChart()\r\n    window.addEventListener('resize', this.handleResize)\r\n  },\r\n  beforeDestroy() {\r\n    window.removeEventListener('resize', this.handleResize)\r\n    if (this.chart) {\r\n      this.chart.dispose()\r\n    }\r\n  },\r\n  methods: {\r\n    initChart() {\r\n      // 对数据进行排序\r\n      const sortedData = [...agriculturalConditionsData.villageFertilizerUsage2024].sort((a, b) => b.usage - a.usage)\r\n      \r\n      this.chart = this.$echarts.init(this.$refs.chart)\r\n      const option = {\r\n        title: {\r\n          text: '2024年各村化肥用量',\r\n          textStyle: {\r\n            color: '#fff',\r\n            fontSize: 14\r\n          },\r\n          left: 'center'\r\n        },\r\n        tooltip: {\r\n          trigger: 'axis',\r\n          axisPointer: {\r\n            type: 'shadow'\r\n          }\r\n        },\r\n        grid: {\r\n          left: '3%',\r\n          right: '4%',\r\n          bottom: '3%',\r\n          containLabel: true\r\n        },\r\n        xAxis: {\r\n          type: 'value',\r\n          name: '用量(吨)',\r\n          nameTextStyle: {\r\n            color: '#fff'\r\n          },\r\n          axisLine: {\r\n            lineStyle: {\r\n              color: '#fff'\r\n            }\r\n          },\r\n          splitLine: {\r\n            lineStyle: {\r\n              color: 'rgba(255, 255, 255, 0.1)'\r\n            }\r\n          }\r\n        },\r\n        yAxis: {\r\n          type: 'category',\r\n          data: sortedData.map(item => item.village),\r\n          axisLine: {\r\n            lineStyle: {\r\n              color: '#fff'\r\n            }\r\n          },\r\n          axisTick: {\r\n            alignWithLabel: true\r\n          }\r\n        },\r\n        series: [\r\n          {\r\n            name: '化肥用量',\r\n            type: 'bar',\r\n            data: sortedData.map(item => item.usage),\r\n            itemStyle: {\r\n              color: new this.$echarts.graphic.LinearGradient(0, 0, 1, 0, [\r\n                { offset: 0, color: '#f94144' },\r\n                { offset: 1, color: '#f3722c' }\r\n              ])\r\n            }\r\n          }\r\n        ]\r\n      }\r\n      this.chart.setOption(option)\r\n    },\r\n    handleResize() {\r\n      if (this.chart) {\r\n        this.chart.resize()\r\n      }\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.chart-wrapper {\r\n  width: 100%;\r\n  height: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n}\r\n\r\n.chart {\r\n  flex: 1;\r\n}\r\n</style> "],"mappings":";;AAOA,SAAAA,0BAAA;AAEA;EACAC,IAAA;EACAC,KAAA;IACA;MACAC,KAAA;IACA;EACA;EACAC,QAAA;IACA,KAAAC,SAAA;IACAC,MAAA,CAAAC,gBAAA,gBAAAC,YAAA;EACA;EACAC,cAAA;IACAH,MAAA,CAAAI,mBAAA,gBAAAF,YAAA;IACA,SAAAL,KAAA;MACA,KAAAA,KAAA,CAAAQ,OAAA;IACA;EACA;EACAC,OAAA;IACAP,UAAA;MACA;MACA,MAAAQ,UAAA,OAAAb,0BAAA,CAAAc,0BAAA,EAAAC,IAAA,EAAAC,CAAA,EAAAC,CAAA,KAAAA,CAAA,CAAAC,KAAA,GAAAF,CAAA,CAAAE,KAAA;MAEA,KAAAf,KAAA,QAAAgB,QAAA,CAAAC,IAAA,MAAAC,KAAA,CAAAlB,KAAA;MACA,MAAAmB,MAAA;QACAC,KAAA;UACAC,IAAA;UACAC,SAAA;YACAC,KAAA;YACAC,QAAA;UACA;UACAC,IAAA;QACA;QACAC,OAAA;UACAC,OAAA;UACAC,WAAA;YACAC,IAAA;UACA;QACA;QACAC,IAAA;UACAL,IAAA;UACAM,KAAA;UACAC,MAAA;UACAC,YAAA;QACA;QACAC,KAAA;UACAL,IAAA;UACA/B,IAAA;UACAqC,aAAA;YACAZ,KAAA;UACA;UACAa,QAAA;YACAC,SAAA;cACAd,KAAA;YACA;UACA;UACAe,SAAA;YACAD,SAAA;cACAd,KAAA;YACA;UACA;QACA;QACAgB,KAAA;UACAV,IAAA;UACA9B,IAAA,EAAAW,UAAA,CAAA8B,GAAA,CAAAC,IAAA,IAAAA,IAAA,CAAAC,OAAA;UACAN,QAAA;YACAC,SAAA;cACAd,KAAA;YACA;UACA;UACAoB,QAAA;YACAC,cAAA;UACA;QACA;QACAC,MAAA,GACA;UACA/C,IAAA;UACA+B,IAAA;UACA9B,IAAA,EAAAW,UAAA,CAAA8B,GAAA,CAAAC,IAAA,IAAAA,IAAA,CAAA1B,KAAA;UACA+B,SAAA;YACAvB,KAAA,WAAAP,QAAA,CAAA+B,OAAA,CAAAC,cAAA,cACA;cAAAC,MAAA;cAAA1B,KAAA;YAAA,GACA;cAAA0B,MAAA;cAAA1B,KAAA;YAAA,EACA;UACA;QACA;MAEA;MACA,KAAAvB,KAAA,CAAAkD,SAAA,CAAA/B,MAAA;IACA;IACAd,aAAA;MACA,SAAAL,KAAA;QACA,KAAAA,KAAA,CAAAmD,MAAA;MACA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}