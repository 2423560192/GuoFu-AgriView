{"ast":null,"code":"import \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.find.js\";\nexport default {\n  name: 'FertilizerPie',\n  data() {\n    return {\n      chart: null,\n      pieData: [{\n        value: 2498.20,\n        name: '氮肥',\n        percentage: '31.32%'\n      }, {\n        value: 3676.38,\n        name: '磷肥',\n        percentage: '46.10%'\n      }, {\n        value: 285.80,\n        name: '钾肥',\n        percentage: '3.58%'\n      }, {\n        value: 1515.63,\n        name: '复合肥',\n        percentage: '19.00%'\n      }],\n      colors: ['#ff4d4f', '#ffd666', '#95de64', '#69c0ff']\n    };\n  },\n  mounted() {\n    this.initChart();\n    window.addEventListener('resize', this.handleResize);\n  },\n  beforeDestroy() {\n    window.removeEventListener('resize', this.handleResize);\n    if (this.chart) {\n      this.chart.dispose();\n    }\n  },\n  methods: {\n    initChart() {\n      if (this.chart) {\n        this.chart.dispose();\n      }\n      this.chart = this.$echarts.init(this.$refs.chart);\n      const option = {\n        tooltip: {\n          trigger: 'item',\n          formatter: '{a} <br/>{b}: {c} 吨 ({d}%)'\n        },\n        legend: {\n          orient: 'vertical',\n          left: 10,\n          top: 'center',\n          textStyle: {\n            color: '#fff'\n          },\n          formatter: name => {\n            const item = this.pieData.find(item => item.name === name);\n            return `${name}  ${item.percentage}`;\n          }\n        },\n        series: [{\n          name: '化肥使用量',\n          type: 'pie',\n          radius: ['40%', '70%'],\n          center: ['65%', '50%'],\n          avoidLabelOverlap: false,\n          itemStyle: {\n            borderRadius: 4,\n            borderColor: 'rgba(0, 0, 0, 0.2)',\n            borderWidth: 1\n          },\n          label: {\n            show: false,\n            position: 'center'\n          },\n          emphasis: {\n            label: {\n              show: true,\n              fontSize: 14,\n              fontWeight: 'bold',\n              color: '#fff'\n            }\n          },\n          labelLine: {\n            show: false\n          },\n          data: this.pieData\n        }]\n      };\n      this.chart.setOption(option);\n    },\n    handleResize() {\n      if (this.chart) {\n        this.chart.resize();\n      }\n    }\n  }\n};","map":{"version":3,"names":["name","data","chart","pieData","value","percentage","colors","mounted","initChart","window","addEventListener","handleResize","beforeDestroy","removeEventListener","dispose","methods","$echarts","init","$refs","option","tooltip","trigger","formatter","legend","orient","left","top","textStyle","color","item","find","series","type","radius","center","avoidLabelOverlap","itemStyle","borderRadius","borderColor","borderWidth","label","show","position","emphasis","fontSize","fontWeight","labelLine","setOption","resize"],"sources":["src/components/charts/FertilizerPie.vue"],"sourcesContent":["<template>\r\n  <div class=\"chart-wrapper\">\r\n    <div class=\"chart-title\">2024年各农业化肥使用量占比</div>\r\n    <div ref=\"chart\" class=\"chart-container\"></div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: 'FertilizerPie',\r\n  data() {\r\n    return {\r\n      chart: null,\r\n      pieData: [\r\n        { value: 2498.20, name: '氮肥', percentage: '31.32%' },\r\n        { value: 3676.38, name: '磷肥', percentage: '46.10%' },\r\n        { value: 285.80, name: '钾肥', percentage: '3.58%' },\r\n        { value: 1515.63, name: '复合肥', percentage: '19.00%' }\r\n      ],\r\n      colors: ['#ff4d4f', '#ffd666', '#95de64', '#69c0ff']\r\n    }\r\n  },\r\n  mounted() {\r\n    this.initChart()\r\n    window.addEventListener('resize', this.handleResize)\r\n  },\r\n  beforeDestroy() {\r\n    window.removeEventListener('resize', this.handleResize)\r\n    if (this.chart) {\r\n      this.chart.dispose()\r\n    }\r\n  },\r\n  methods: {\r\n    initChart() {\r\n      if (this.chart) {\r\n        this.chart.dispose()\r\n      }\r\n      \r\n      this.chart = this.$echarts.init(this.$refs.chart)\r\n      \r\n      const option = {\r\n        tooltip: {\r\n          trigger: 'item',\r\n          formatter: '{a} <br/>{b}: {c} 吨 ({d}%)'\r\n        },\r\n        legend: {\r\n          orient: 'vertical',\r\n          left: 10,\r\n          top: 'center',\r\n          textStyle: {\r\n            color: '#fff'\r\n          },\r\n          formatter: name => {\r\n            const item = this.pieData.find(item => item.name === name)\r\n            return `${name}  ${item.percentage}`\r\n          }\r\n        },\r\n        series: [\r\n          {\r\n            name: '化肥使用量',\r\n            type: 'pie',\r\n            radius: ['40%', '70%'],\r\n            center: ['65%', '50%'],\r\n            avoidLabelOverlap: false,\r\n            itemStyle: {\r\n              borderRadius: 4,\r\n              borderColor: 'rgba(0, 0, 0, 0.2)',\r\n              borderWidth: 1\r\n            },\r\n            label: {\r\n              show: false,\r\n              position: 'center'\r\n            },\r\n            emphasis: {\r\n              label: {\r\n                show: true,\r\n                fontSize: 14,\r\n                fontWeight: 'bold',\r\n                color: '#fff'\r\n              }\r\n            },\r\n            labelLine: {\r\n              show: false\r\n            },\r\n            data: this.pieData\r\n          }\r\n        ]\r\n      }\r\n      \r\n      this.chart.setOption(option)\r\n    },\r\n    handleResize() {\r\n      if (this.chart) {\r\n        this.chart.resize()\r\n      }\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.chart-wrapper {\r\n  width: 100%;\r\n  height: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  padding: 5px;\r\n  box-sizing: border-box;\r\n}\r\n\r\n.chart-title {\r\n  font-size: 14px;\r\n  color: #fff;\r\n  text-align: center;\r\n  margin-bottom: 5px;\r\n  flex-shrink: 0;\r\n}\r\n\r\n.chart-container {\r\n  flex: 1;\r\n  width: 100%;\r\n}\r\n\r\n@media screen and (max-width: 480px) {\r\n  .chart-title {\r\n    font-size: 12px;\r\n  }\r\n}\r\n</style> "],"mappings":";;AAQA;EACAA,IAAA;EACAC,KAAA;IACA;MACAC,KAAA;MACAC,OAAA,GACA;QAAAC,KAAA;QAAAJ,IAAA;QAAAK,UAAA;MAAA,GACA;QAAAD,KAAA;QAAAJ,IAAA;QAAAK,UAAA;MAAA,GACA;QAAAD,KAAA;QAAAJ,IAAA;QAAAK,UAAA;MAAA,GACA;QAAAD,KAAA;QAAAJ,IAAA;QAAAK,UAAA;MAAA,EACA;MACAC,MAAA;IACA;EACA;EACAC,QAAA;IACA,KAAAC,SAAA;IACAC,MAAA,CAAAC,gBAAA,gBAAAC,YAAA;EACA;EACAC,cAAA;IACAH,MAAA,CAAAI,mBAAA,gBAAAF,YAAA;IACA,SAAAT,KAAA;MACA,KAAAA,KAAA,CAAAY,OAAA;IACA;EACA;EACAC,OAAA;IACAP,UAAA;MACA,SAAAN,KAAA;QACA,KAAAA,KAAA,CAAAY,OAAA;MACA;MAEA,KAAAZ,KAAA,QAAAc,QAAA,CAAAC,IAAA,MAAAC,KAAA,CAAAhB,KAAA;MAEA,MAAAiB,MAAA;QACAC,OAAA;UACAC,OAAA;UACAC,SAAA;QACA;QACAC,MAAA;UACAC,MAAA;UACAC,IAAA;UACAC,GAAA;UACAC,SAAA;YACAC,KAAA;UACA;UACAN,SAAA,EAAAtB,IAAA;YACA,MAAA6B,IAAA,QAAA1B,OAAA,CAAA2B,IAAA,CAAAD,IAAA,IAAAA,IAAA,CAAA7B,IAAA,KAAAA,IAAA;YACA,UAAAA,IAAA,KAAA6B,IAAA,CAAAxB,UAAA;UACA;QACA;QACA0B,MAAA,GACA;UACA/B,IAAA;UACAgC,IAAA;UACAC,MAAA;UACAC,MAAA;UACAC,iBAAA;UACAC,SAAA;YACAC,YAAA;YACAC,WAAA;YACAC,WAAA;UACA;UACAC,KAAA;YACAC,IAAA;YACAC,QAAA;UACA;UACAC,QAAA;YACAH,KAAA;cACAC,IAAA;cACAG,QAAA;cACAC,UAAA;cACAjB,KAAA;YACA;UACA;UACAkB,SAAA;YACAL,IAAA;UACA;UACAxC,IAAA,OAAAE;QACA;MAEA;MAEA,KAAAD,KAAA,CAAA6C,SAAA,CAAA5B,MAAA;IACA;IACAR,aAAA;MACA,SAAAT,KAAA;QACA,KAAAA,KAAA,CAAA8C,MAAA;MACA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}