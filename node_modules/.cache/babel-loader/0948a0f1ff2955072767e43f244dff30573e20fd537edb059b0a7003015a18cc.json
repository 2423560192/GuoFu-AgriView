{"ast":null,"code":"import * as echarts from 'echarts';\nexport default {\n  name: 'GrainPyramid',\n  data() {\n    return {\n      currentYear: '2024',\n      years: ['2024', '2023', '2022', '2021'],\n      dataMap: {\n        '2024': {\n          grain: 61.59,\n          beans: 9.62,\n          potato: 28.80\n        },\n        '2023': {\n          grain: 61.67,\n          beans: 9.58,\n          potato: 28.75\n        },\n        '2022': {\n          grain: 61.91,\n          beans: 9.36,\n          potato: 28.73\n        },\n        '2021': {\n          grain: 62.37,\n          beans: 8.65,\n          potato: 28.98\n        }\n      },\n      chart: null\n    };\n  },\n  mounted() {\n    this.initChart();\n    window.addEventListener('resize', this.resizeChart);\n  },\n  beforeUnmount() {\n    window.removeEventListener('resize', this.resizeChart);\n    if (this.chart) {\n      this.chart.dispose();\n      this.chart = null;\n    }\n  },\n  methods: {\n    initChart() {\n      this.chart = echarts.init(this.$refs.chartRef);\n      this.updateChart();\n    },\n    changeYear(year) {\n      this.currentYear = year;\n      this.updateChart();\n    },\n    updateChart() {\n      if (!this.chart) return;\n      const data = [{\n        name: '谷物',\n        value: this.dataMap[this.currentYear].grain,\n        num: this.dataMap[this.currentYear].grain.toFixed(2),\n        ratio: this.dataMap[this.currentYear].grain.toFixed(2) + '%',\n        itemStyle: {\n          color: '#f9c74f'\n        }\n      }, {\n        name: '薯类',\n        value: this.dataMap[this.currentYear].potato,\n        num: this.dataMap[this.currentYear].potato.toFixed(2),\n        ratio: this.dataMap[this.currentYear].potato.toFixed(2) + '%',\n        itemStyle: {\n          color: '#4cd5ce'\n        }\n      }, {\n        name: '豆类',\n        value: this.dataMap[this.currentYear].beans,\n        num: this.dataMap[this.currentYear].beans.toFixed(2),\n        ratio: this.dataMap[this.currentYear].beans.toFixed(2) + '%',\n        itemStyle: {\n          color: '#90be6d'\n        }\n      }];\n      const option = {\n        tooltip: {\n          trigger: 'item',\n          formatter: function (params) {\n            return `${params.marker}${params.name}：${params.data.num}%`;\n          }\n        },\n        legend: {\n          data: ['谷物', '薯类', '豆类'],\n          orient: 'vertical',\n          left: '5%',\n          top: 'center',\n          textStyle: {\n            color: '#fff'\n          },\n          itemStyle: {\n            borderWidth: 0\n          }\n        },\n        series: [{\n          name: '占比',\n          type: 'funnel',\n          left: '25%',\n          top: 20,\n          bottom: 10,\n          width: '70%',\n          min: 0,\n          max: 100,\n          minSize: '0%',\n          maxSize: '100%',\n          sort: 'ascending',\n          gap: 2,\n          label: {\n            formatter: function (params) {\n              return `{b|${params.data.num}%}\\n{c|占比${params.data.ratio}}`;\n            },\n            rich: {\n              b: {\n                color: '#fff',\n                lineHeight: 30,\n                fontWeight: \"bold\",\n                fontSize: 16\n              },\n              c: {\n                color: 'rgba(255,255,255,0.7)',\n                lineHeight: 20,\n                fontSize: 12,\n                padding: [0, 0]\n              }\n            }\n          },\n          labelLine: {\n            show: false\n          },\n          itemStyle: {\n            borderColor: \"rgba(255,255,255,0.5)\",\n            borderWidth: 1\n          },\n          emphasis: {\n            label: {\n              fontSize: 18\n            }\n          },\n          data: data\n        }, {\n          name: '占比',\n          type: 'funnel',\n          left: '25%',\n          top: 20,\n          bottom: 10,\n          width: '70%',\n          min: 0,\n          max: 100,\n          minSize: '0%',\n          maxSize: '100%',\n          sort: 'ascending',\n          gap: 2,\n          label: {\n            position: 'inside',\n            formatter: '{b}',\n            fontSize: 14,\n            color: '#fff'\n          },\n          itemStyle: {\n            opacity: 1,\n            borderColor: '#fff',\n            borderWidth: 1\n          },\n          emphasis: {\n            label: {\n              fontSize: 16\n            }\n          },\n          data: data,\n          z: 100\n        }]\n      };\n      this.chart.setOption(option);\n    },\n    resizeChart() {\n      if (this.chart) {\n        this.chart.resize();\n      }\n    }\n  }\n};","map":{"version":3,"names":["echarts","name","data","currentYear","years","dataMap","grain","beans","potato","chart","mounted","initChart","window","addEventListener","resizeChart","beforeUnmount","removeEventListener","dispose","methods","init","$refs","chartRef","updateChart","changeYear","year","value","num","toFixed","ratio","itemStyle","color","option","tooltip","trigger","formatter","params","marker","legend","orient","left","top","textStyle","borderWidth","series","type","bottom","width","min","max","minSize","maxSize","sort","gap","label","rich","b","lineHeight","fontWeight","fontSize","c","padding","labelLine","show","borderColor","emphasis","position","opacity","z","setOption","resize"],"sources":["src/components/charts/GrainPyramid.vue"],"sourcesContent":["<template>\r\n  <div class=\"chart-container\">\r\n    <!-- 年份选择器 -->\r\n    <div class=\"year-selector\">\r\n      <div \r\n        v-for=\"year in years\" \r\n        :key=\"year\" \r\n        :class=\"['year-tab', { active: currentYear === year }]\" \r\n        @click=\"changeYear(year)\"\r\n      >\r\n        {{ year }}年\r\n      </div>\r\n    </div>\r\n    \r\n    <!-- 自定义标题 -->\r\n    <div class=\"chart-title\">{{ currentYear }}年粮食作物占比</div>\r\n    \r\n    <!-- ECharts漏斗图 -->\r\n    <div ref=\"chartRef\" class=\"echarts-container\"></div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport * as echarts from 'echarts'\r\n\r\nexport default {\r\n  name: 'GrainPyramid',\r\n  data() {\r\n    return {\r\n      currentYear: '2024',\r\n      years: ['2024', '2023', '2022', '2021'],\r\n      dataMap: {\r\n        '2024': { grain: 61.59, beans: 9.62, potato: 28.80 },\r\n        '2023': { grain: 61.67, beans: 9.58, potato: 28.75 },\r\n        '2022': { grain: 61.91, beans: 9.36, potato: 28.73 },\r\n        '2021': { grain: 62.37, beans: 8.65, potato: 28.98 }\r\n      },\r\n      chart: null\r\n    }\r\n  },\r\n  mounted() {\r\n    this.initChart()\r\n    window.addEventListener('resize', this.resizeChart)\r\n  },\r\n  beforeUnmount() {\r\n    window.removeEventListener('resize', this.resizeChart)\r\n    if (this.chart) {\r\n      this.chart.dispose()\r\n      this.chart = null\r\n    }\r\n  },\r\n  methods: {\r\n    initChart() {\r\n      this.chart = echarts.init(this.$refs.chartRef)\r\n      this.updateChart()\r\n    },\r\n    \r\n    changeYear(year) {\r\n      this.currentYear = year\r\n      this.updateChart()\r\n    },\r\n    \r\n    updateChart() {\r\n      if (!this.chart) return\r\n      \r\n      const data = [\r\n        {\r\n          name: '谷物',\r\n          value: this.dataMap[this.currentYear].grain,\r\n          num: this.dataMap[this.currentYear].grain.toFixed(2),\r\n          ratio: this.dataMap[this.currentYear].grain.toFixed(2) + '%',\r\n          itemStyle: { color: '#f9c74f' }\r\n        },\r\n        {\r\n          name: '薯类',\r\n          value: this.dataMap[this.currentYear].potato,\r\n          num: this.dataMap[this.currentYear].potato.toFixed(2),\r\n          ratio: this.dataMap[this.currentYear].potato.toFixed(2) + '%',\r\n          itemStyle: { color: '#4cd5ce' }\r\n        },\r\n        {\r\n          name: '豆类',\r\n          value: this.dataMap[this.currentYear].beans,\r\n          num: this.dataMap[this.currentYear].beans.toFixed(2),\r\n          ratio: this.dataMap[this.currentYear].beans.toFixed(2) + '%',\r\n          itemStyle: { color: '#90be6d' }\r\n        }\r\n      ]\r\n      \r\n      const option = {\r\n        tooltip: {\r\n          trigger: 'item',\r\n          formatter: function(params) {\r\n            return `${params.marker}${params.name}：${params.data.num}%`\r\n          }\r\n        },\r\n        legend: {\r\n          data: ['谷物', '薯类', '豆类'],\r\n          orient: 'vertical',\r\n          left: '5%',\r\n          top: 'center',\r\n          textStyle: {\r\n            color: '#fff'\r\n          },\r\n          itemStyle: {\r\n            borderWidth: 0\r\n          }\r\n        },\r\n        series: [\r\n          {\r\n            name: '占比',\r\n            type: 'funnel',\r\n            left: '25%',\r\n            top: 20,\r\n            bottom: 10,\r\n            width: '70%',\r\n            min: 0,\r\n            max: 100,\r\n            minSize: '0%',\r\n            maxSize: '100%',\r\n            sort: 'ascending',\r\n            gap: 2,\r\n            label: {\r\n              formatter: function(params) {\r\n                return `{b|${params.data.num}%}\\n{c|占比${params.data.ratio}}`\r\n              },\r\n              rich: {\r\n                b: {\r\n                  color: '#fff',\r\n                  lineHeight: 30,\r\n                  fontWeight: \"bold\",\r\n                  fontSize: 16\r\n                },\r\n                c: {\r\n                  color: 'rgba(255,255,255,0.7)',\r\n                  lineHeight: 20,\r\n                  fontSize: 12,\r\n                  padding: [0, 0]\r\n                }\r\n              }\r\n            },\r\n            labelLine: {\r\n              show: false\r\n            },\r\n            itemStyle: {\r\n              borderColor: \"rgba(255,255,255,0.5)\",\r\n              borderWidth: 1\r\n            },\r\n            emphasis: {\r\n              label: {\r\n                fontSize: 18\r\n              }\r\n            },\r\n            data: data\r\n          },\r\n          {\r\n            name: '占比',\r\n            type: 'funnel',\r\n            left: '25%',\r\n            top: 20,\r\n            bottom: 10,\r\n            width: '70%',\r\n            min: 0,\r\n            max: 100,\r\n            minSize: '0%',\r\n            maxSize: '100%',\r\n            sort: 'ascending',\r\n            gap: 2,\r\n            label: {\r\n              position: 'inside',\r\n              formatter: '{b}',\r\n              fontSize: 14,\r\n              color: '#fff'\r\n            },\r\n            itemStyle: {\r\n              opacity: 1,\r\n              borderColor: '#fff',\r\n              borderWidth: 1\r\n            },\r\n            emphasis: {\r\n              label: {\r\n                fontSize: 16\r\n              }\r\n            },\r\n            data: data,\r\n            z: 100\r\n          }\r\n        ]\r\n      }\r\n      \r\n      this.chart.setOption(option)\r\n    },\r\n    \r\n    resizeChart() {\r\n      if (this.chart) {\r\n        this.chart.resize()\r\n      }\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.chart-container {\r\n  width: 100%;\r\n  height: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  padding: 5px 0 0 0;\r\n  box-sizing: border-box;\r\n}\r\n\r\n.year-selector {\r\n  display: flex;\r\n  justify-content: center;\r\n  padding: 5px 0;\r\n}\r\n\r\n.chart-title {\r\n  text-align: center;\r\n  color: #fff;\r\n  font-size: 16px;\r\n  font-weight: bold;\r\n  margin: 5px 0 15px 0;\r\n}\r\n\r\n.year-tab {\r\n  padding: 4px 10px;\r\n  margin: 0 5px;\r\n  cursor: pointer;\r\n  color: rgba(255, 255, 255, 0.7);\r\n  font-size: 13px;\r\n  border-radius: 4px;\r\n  transition: all 0.3s ease;\r\n  border: 1px solid transparent;\r\n}\r\n\r\n.year-tab:hover {\r\n  color: #fff;\r\n  background: rgba(76, 213, 206, 0.1);\r\n}\r\n\r\n.year-tab.active {\r\n  color: #4cd5ce;\r\n  font-weight: bold;\r\n  border: 1px solid rgba(76, 213, 206, 0.5);\r\n}\r\n\r\n.echarts-container {\r\n  width: 100%;\r\n  flex: 1;\r\n}\r\n\r\n@media screen and (max-width: 768px) {\r\n  .year-tab {\r\n    padding: 3px 8px;\r\n    font-size: 12px;\r\n  }\r\n  \r\n  .chart-title {\r\n    font-size: 15px;\r\n    margin: 5px 0 10px 0;\r\n  }\r\n}\r\n\r\n@media screen and (max-width: 480px) {\r\n  .year-tab {\r\n    padding: 2px 6px;\r\n    margin: 0 3px;\r\n    font-size: 11px;\r\n  }\r\n  \r\n  .chart-title {\r\n    font-size: 14px;\r\n    margin: 3px 0 8px 0;\r\n  }\r\n}\r\n</style> "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}