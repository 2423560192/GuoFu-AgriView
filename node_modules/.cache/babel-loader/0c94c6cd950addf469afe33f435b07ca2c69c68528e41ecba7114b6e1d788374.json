{"ast":null,"code":"export default {\n  name: 'OtherConsumptionTable',\n  data() {\n    return {\n      tableData: [{\n        category: '农用塑料薄膜使用量',\n        unit: '千克',\n        '2024': 37306.56,\n        '2023': 37306.56,\n        '2022': 37451,\n        '2021': 37599\n      }, {\n        category: '地膜覆盖面积',\n        unit: '亩',\n        '2024': 9245.48,\n        '2023': 9245.48,\n        '2022': 9264,\n        '2021': 9283\n      }, {\n        category: '农用柴油使用量',\n        unit: '千克',\n        '2024': 75396.6,\n        '2023': 75396.6,\n        '2022': 75137,\n        '2021': 74873\n      }, {\n        category: '农药使用量',\n        unit: '千克',\n        '2024': 0,\n        '2023': 22808.56,\n        '2022': 22831,\n        '2021': 22854\n      }],\n      maxValues: {\n        '农用塑料薄膜使用量': 40000,\n        '地膜覆盖面积': 10000,\n        '农用柴油使用量': 80000,\n        '农药使用量': 25000\n      },\n      colorMap: {\n        '农用塑料薄膜使用量': 'rgba(249, 199, 79, 0.7)',\n        '地膜覆盖面积': 'rgba(144, 190, 109, 0.7)',\n        '农用柴油使用量': 'rgba(67, 170, 139, 0.7)',\n        '农药使用量': 'rgba(77, 144, 142, 0.7)'\n      }\n    };\n  },\n  methods: {\n    tableHeaderStyle() {\n      return {\n        backgroundColor: 'rgba(0, 0, 0, 0.3)',\n        color: '#fff',\n        fontWeight: 'bold',\n        padding: '5px 0',\n        fontSize: '12px'\n      };\n    },\n    tableCellStyle({\n      row,\n      column\n    }) {\n      return {\n        backgroundColor: 'transparent',\n        color: column.property === 'category' ? '#f9c74f' : '#fff',\n        padding: '3px',\n        fontSize: '12px'\n      };\n    },\n    getBarWidth(row, year) {\n      if (row[year] <= 0) return 0;\n      const maxValue = this.maxValues[row.category] || 100000;\n      return row[year] / maxValue * 100;\n    },\n    getBarColor(category) {\n      return this.colorMap[category] || 'rgba(249, 199, 79, 0.7)';\n    }\n  }\n};","map":{"version":3,"names":["name","data","tableData","category","unit","maxValues","colorMap","methods","tableHeaderStyle","backgroundColor","color","fontWeight","padding","fontSize","tableCellStyle","row","column","property","getBarWidth","year","maxValue","getBarColor"],"sources":["src/components/tables/OtherConsumptionTable.vue"],"sourcesContent":["<template>\r\n  <div class=\"chart-wrapper\">\r\n    <div class=\"chart-title\">2021-2024年其他农业生产消耗量</div>\r\n    <div class=\"table-container\">\r\n      <el-table\r\n        :data=\"tableData\"\r\n        style=\"width: 100%\"\r\n        :header-cell-style=\"tableHeaderStyle\"\r\n        :cell-style=\"tableCellStyle\"\r\n        size=\"mini\"\r\n        border>\r\n        <el-table-column prop=\"category\" label=\"消耗类别\" min-width=\"140\"></el-table-column>\r\n        <el-table-column prop=\"unit\" label=\"单位\" width=\"80\" align=\"center\"></el-table-column>\r\n        <el-table-column prop=\"2024\" label=\"2024年\" min-width=\"100\" align=\"right\">\r\n          <template slot-scope=\"scope\">\r\n            <div class=\"value-cell\">\r\n              <div v-if=\"scope.row['2024'] > 0\" \r\n                   class=\"value-bar\" \r\n                   :style=\"{width: getBarWidth(scope.row, '2024') + '%', backgroundColor: getBarColor(scope.row.category)}\">\r\n              </div>\r\n              <span class=\"value-text\">{{ scope.row['2024'] }}</span>\r\n            </div>\r\n          </template>\r\n        </el-table-column>\r\n        <el-table-column prop=\"2023\" label=\"2023年\" min-width=\"100\" align=\"right\">\r\n          <template slot-scope=\"scope\">\r\n            <div class=\"value-cell\">\r\n              <div v-if=\"scope.row['2023'] > 0\" \r\n                   class=\"value-bar\" \r\n                   :style=\"{width: getBarWidth(scope.row, '2023') + '%', backgroundColor: getBarColor(scope.row.category)}\">\r\n              </div>\r\n              <span class=\"value-text\">{{ scope.row['2023'] }}</span>\r\n            </div>\r\n          </template>\r\n        </el-table-column>\r\n        <el-table-column prop=\"2022\" label=\"2022年\" min-width=\"100\" align=\"right\">\r\n          <template slot-scope=\"scope\">\r\n            <div class=\"value-cell\">\r\n              <div v-if=\"scope.row['2022'] > 0\" \r\n                   class=\"value-bar\" \r\n                   :style=\"{width: getBarWidth(scope.row, '2022') + '%', backgroundColor: getBarColor(scope.row.category)}\">\r\n              </div>\r\n              <span class=\"value-text\">{{ scope.row['2022'] }}</span>\r\n            </div>\r\n          </template>\r\n        </el-table-column>\r\n        <el-table-column prop=\"2021\" label=\"2021年\" min-width=\"100\" align=\"right\">\r\n          <template slot-scope=\"scope\">\r\n            <div class=\"value-cell\">\r\n              <div v-if=\"scope.row['2021'] > 0\" \r\n                   class=\"value-bar\" \r\n                   :style=\"{width: getBarWidth(scope.row, '2021') + '%', backgroundColor: getBarColor(scope.row.category)}\">\r\n              </div>\r\n              <span class=\"value-text\">{{ scope.row['2021'] }}</span>\r\n            </div>\r\n          </template>\r\n        </el-table-column>\r\n      </el-table>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: 'OtherConsumptionTable',\r\n  data() {\r\n    return {\r\n      tableData: [\r\n        { \r\n          category: '农用塑料薄膜使用量', \r\n          unit: '千克',\r\n          '2024': 37306.56, \r\n          '2023': 37306.56, \r\n          '2022': 37451, \r\n          '2021': 37599\r\n        },\r\n        { \r\n          category: '地膜覆盖面积', \r\n          unit: '亩',\r\n          '2024': 9245.48, \r\n          '2023': 9245.48, \r\n          '2022': 9264, \r\n          '2021': 9283\r\n        },\r\n        { \r\n          category: '农用柴油使用量', \r\n          unit: '千克',\r\n          '2024': 75396.6, \r\n          '2023': 75396.6, \r\n          '2022': 75137, \r\n          '2021': 74873 \r\n        },\r\n        { \r\n          category: '农药使用量', \r\n          unit: '千克',\r\n          '2024': 0, \r\n          '2023': 22808.56, \r\n          '2022': 22831, \r\n          '2021': 22854\r\n        }\r\n      ],\r\n      maxValues: {\r\n        '农用塑料薄膜使用量': 40000,\r\n        '地膜覆盖面积': 10000,\r\n        '农用柴油使用量': 80000,\r\n        '农药使用量': 25000\r\n      },\r\n      colorMap: {\r\n        '农用塑料薄膜使用量': 'rgba(249, 199, 79, 0.7)',\r\n        '地膜覆盖面积': 'rgba(144, 190, 109, 0.7)',\r\n        '农用柴油使用量': 'rgba(67, 170, 139, 0.7)',\r\n        '农药使用量': 'rgba(77, 144, 142, 0.7)'\r\n      }\r\n    }\r\n  },\r\n  methods: {\r\n    tableHeaderStyle() {\r\n      return {\r\n        backgroundColor: 'rgba(0, 0, 0, 0.3)',\r\n        color: '#fff',\r\n        fontWeight: 'bold',\r\n        padding: '5px 0',\r\n        fontSize: '12px'\r\n      }\r\n    },\r\n    tableCellStyle({row, column}) {\r\n      return {\r\n        backgroundColor: 'transparent',\r\n        color: column.property === 'category' ? '#f9c74f' : '#fff',\r\n        padding: '3px',\r\n        fontSize: '12px'\r\n      }\r\n    },\r\n    getBarWidth(row, year) {\r\n      if (row[year] <= 0) return 0;\r\n      const maxValue = this.maxValues[row.category] || 100000;\r\n      return (row[year] / maxValue) * 100;\r\n    },\r\n    getBarColor(category) {\r\n      return this.colorMap[category] || 'rgba(249, 199, 79, 0.7)';\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.chart-wrapper {\r\n  height: 100%;\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  padding: 5px;\r\n  box-sizing: border-box;\r\n}\r\n\r\n.chart-title {\r\n  font-size: 14px;\r\n  color: #fff;\r\n  text-align: center;\r\n  margin-bottom: 5px;\r\n  flex-shrink: 0;\r\n}\r\n\r\n.table-container {\r\n  flex: 1;\r\n  overflow: auto;\r\n  min-height: 150px;\r\n}\r\n\r\n.value-cell {\r\n  position: relative;\r\n  height: 20px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: flex-end;\r\n}\r\n\r\n.value-bar {\r\n  position: absolute;\r\n  height: 70%;\r\n  left: 0;\r\n  border-radius: 2px;\r\n  z-index: 0;\r\n}\r\n\r\n.value-text {\r\n  position: relative;\r\n  z-index: 1;\r\n  padding-right: 5px;\r\n}\r\n\r\n:deep(.el-table) {\r\n  background-color: transparent !important;\r\n  color: #fff !important;\r\n}\r\n\r\n:deep(.el-table__header-wrapper), \r\n:deep(.el-table__body-wrapper), \r\n:deep(.el-table__footer-wrapper) {\r\n  background-color: transparent !important;\r\n}\r\n\r\n:deep(.el-table__inner-wrapper),\r\n:deep(.el-table__header),\r\n:deep(.el-table__body),\r\n:deep(.el-table__footer) {\r\n  background-color: transparent !important;\r\n}\r\n\r\n:deep(.el-table::before) {\r\n  display: none;\r\n}\r\n\r\n:deep(.el-table--border) {\r\n  border: 1px solid rgba(255, 255, 255, 0.1);\r\n}\r\n\r\n:deep(.el-table--border::after) {\r\n  background-color: rgba(255, 255, 255, 0.1);\r\n}\r\n\r\n:deep(.el-table--border th), :deep(.el-table--border td) {\r\n  border-bottom: 1px solid rgba(255, 255, 255, 0.1);\r\n}\r\n\r\n:deep(.el-table--border td), :deep(.el-table--border th) {\r\n  border-right: 1px solid rgba(255, 255, 255, 0.1);\r\n}\r\n\r\n:deep(.el-table--enable-row-hover .el-table__body tr:hover > td) {\r\n  background-color: rgba(76, 213, 206, 0.1) !important;\r\n}\r\n\r\n:deep(.el-table .cell) {\r\n  padding-left: 5px;\r\n  padding-right: 5px;\r\n}\r\n\r\n@media screen and (max-width: 480px) {\r\n  .chart-title {\r\n    font-size: 12px;\r\n  }\r\n  \r\n  .table-container {\r\n    min-height: 120px;\r\n  }\r\n}\r\n</style> "],"mappings":"AA+DA;EACAA,IAAA;EACAC,KAAA;IACA;MACAC,SAAA,GACA;QACAC,QAAA;QACAC,IAAA;QACA;QACA;QACA;QACA;MACA,GACA;QACAD,QAAA;QACAC,IAAA;QACA;QACA;QACA;QACA;MACA,GACA;QACAD,QAAA;QACAC,IAAA;QACA;QACA;QACA;QACA;MACA,GACA;QACAD,QAAA;QACAC,IAAA;QACA;QACA;QACA;QACA;MACA,EACA;MACAC,SAAA;QACA;QACA;QACA;QACA;MACA;MACAC,QAAA;QACA;QACA;QACA;QACA;MACA;IACA;EACA;EACAC,OAAA;IACAC,iBAAA;MACA;QACAC,eAAA;QACAC,KAAA;QACAC,UAAA;QACAC,OAAA;QACAC,QAAA;MACA;IACA;IACAC,eAAA;MAAAC,GAAA;MAAAC;IAAA;MACA;QACAP,eAAA;QACAC,KAAA,EAAAM,MAAA,CAAAC,QAAA;QACAL,OAAA;QACAC,QAAA;MACA;IACA;IACAK,YAAAH,GAAA,EAAAI,IAAA;MACA,IAAAJ,GAAA,CAAAI,IAAA;MACA,MAAAC,QAAA,QAAAf,SAAA,CAAAU,GAAA,CAAAZ,QAAA;MACA,OAAAY,GAAA,CAAAI,IAAA,IAAAC,QAAA;IACA;IACAC,YAAAlB,QAAA;MACA,YAAAG,QAAA,CAAAH,QAAA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}